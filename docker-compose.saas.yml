version: "3.5"
networks:
  escola_lms:
    name: escola_lms
    driver: bridge
services:
  caddy:
    image: caddy
    volumes:
      - ./docker/conf/Caddyfile:/etc/caddy/Caddyfile
      - ./:/var/www/html
      - ./caddy/certs:/etc/caddy/certs
      - ./caddy/data:/data
      - ./caddy/config:/config
    networks:
      - escola_lms
    ports:
      - "1001:1001"
  #      - "443:443"
  escola_lms_app:
    image: escolalms/php:8.2-prod ## or escolalms/php:8-work for debugginh
    volumes:
      - ./:/var/www/html
    networks:
      - escola_lms

  escola_lms_queue_cron:
    image: escolalms/php:8.2-prod ## or escolalms/php:8-work for debugginh
    volumes:
      - ./:/var/www/html
    networks:
      - escola_lms

  postgres:
    image: postgres:12
    ports:
      - "5432:5432"
    networks:
      - escola_lms
    volumes:
      - ./docker/postgres-data:/var/lib/postgresql/data
      - ./docker/postgres-backups:/var/lib/postgresql/backups
    environment:
      - "POSTGRES_DB=${DB_DATABASE}"
      - "POSTGRES_USER=${DB_USERNAME}"
      - "POSTGRES_PASSWORD=${DB_PASSWORD}"
      - TZ=Europe/Warsaw

  adminer:
    networks:
      - escola_lms
    image: adminer
    ports:
      - 8078:8080

  mailhog:
    networks:
      - escola_lms
    image: mailhog/mailhog
    logging:
      driver: "none" # disable saving logs
    ports:
      #- 1025:1025 # smtp server
      - 8025:8025 # web ui

  redis:
    networks:
      - escola_lms
    image: "redis"
    command: "redis-server --requirepass ${REDIS_PASSWORD}"

  reportbro:
    networks:
      - escola_lms
    image: escolalms/reportbro-server:latest

  minio:
    image: bitnami/minio
    networks:
      - escola_lms
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - ./docker/minio_storage:/data
      - ./docker/conf/minio:/docker-entrypoint-initdb.d
    environment:
      MINIO_DEFAULT_BUCKETS: "${AWS_BUCKET}:download"
      MINIO_ROOT_USER: ${AWS_ACCESS_KEY_ID}
      MINIO_ROOT_PASSWORD: ${AWS_SECRET_ACCESS_KEY}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_BUCKET: ${AWS_BUCKET}
      AWS_ENDPOINT: ${AWS_ENDPOINT}
