{
    "openapi": "3.0.0",
    "info": {
        "title": "EscolaLMS",
        "version": "0.0.1"
    },
    "paths": {
        "/api/events": {
            "get": {
                "tags": [
                    "Events"
                ],
                "summary": "Get a listing of the Stationary events and Webinars",
                "description": "Get all Stationary Events and Webinars",
                "operationId": "71ee276c27779404579ddadb0153d795",
                "parameters": [
                    {
                        "name": "order_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "next",
                                "past"
                            ]
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Pagination Page Number",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "default": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Pagination Per Page",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/api/admin/user-submissions": {
            "get": {
                "tags": [
                    "Assign Without Account"
                ],
                "summary": "Lists available user submissions",
                "operationId": "0bb20b9fcce3a66a1273f75cc8c02aff",
                "parameters": [
                    {
                        "name": "email",
                        "in": "query",
                        "description": "User email",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "User submission status",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "morphable_type",
                        "in": "query",
                        "description": "Morphable type",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "morphable_id",
                        "in": "query",
                        "description": "Morphable id",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of available user submissions"
                    },
                    "401": {
                        "description": "Endpoint requires authentication"
                    },
                    "403": {
                        "description": "User doesn't have required access rights"
                    },
                    "500": {
                        "description": "Server-side error"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Assign Without Account"
                ],
                "summary": "Create a new user submission identified by id",
                "operationId": "52c0c9f48f6098df0b0c4a569429560a",
                "requestBody": {
                    "description": "User submission attributes",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserSubmission"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User submission created successfully"
                    },
                    "401": {
                        "description": "Endpoint requires authentication"
                    },
                    "403": {
                        "description": "User doesn't have required access rights"
                    },
                    "422": {
                        "description": "One of the parameters has invalid format"
                    },
                    "500": {
                        "description": "Server-side error"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/admin/user-submissions/{id}": {
            "put": {
                "tags": [
                    "Assign Without Account"
                ],
                "summary": "Update an existing user submission identified by id",
                "operationId": "a87f3e11e8ef0c676b2b92d09a28ea96",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Unique human-readable user submission identifier",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "User submission attributes",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserSubmission"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User submission created successfully"
                    },
                    "401": {
                        "description": "Endpoint requires authentication"
                    },
                    "403": {
                        "description": "User doesn't have required access rights"
                    },
                    "422": {
                        "description": "One of the parameters has invalid format"
                    },
                    "500": {
                        "description": "Server-side error"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Assign Without Account"
                ],
                "summary": "Delete user submission identified by a id",
                "operationId": "f9969ee33d77c41bd3b115097070bc2a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Unique human-readable access url identifier",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User submission eleted successfully"
                    },
                    "401": {
                        "description": "Endpoint requires authentication"
                    },
                    "403": {
                        "description": "User doesn't have required access rights"
                    },
                    "500": {
                        "description": "Server-side error"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/admin/user-groups/": {
            "get": {
                "tags": [
                    "Admin User Groups"
                ],
                "summary": "List groups",
                "description": "",
                "operationId": "b4631bcf8030edaa73072b86b87a2f23",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "parent_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation, returns list of groups",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Admin User Groups"
                ],
                "summary": "Create group",
                "description": "",
                "operationId": "042cca0018523fd6ba315b28f0151d89",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Group"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "successful operation, Group created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Group"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/admin/user-groups/tree/": {
            "get": {
                "tags": [
                    "Admin User Groups"
                ],
                "summary": "List groups in a tree",
                "description": "",
                "operationId": "6655f9b0a9e4a3b5091bd2ac677e757a",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "parent_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation, returns list of groups",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/admin/user-groups/{id}": {
            "get": {
                "tags": [
                    "Admin User Groups"
                ],
                "summary": "Get group details",
                "description": "",
                "operationId": "203b726fc6e72a74de7107a7acb4054e",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation, returns Group data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Group"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Admin User Groups"
                ],
                "summary": "Update group",
                "description": "",
                "operationId": "711d682ab4fb16dbdfe1bf715e3e5813",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Group"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Group"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Group not found"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Admin User Groups"
                ],
                "summary": "Delete group",
                "description": "",
                "operationId": "0c31272718f7e388e8961e3c6efa6bf4",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation, Group deleted"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/admin/user-groups/{id}/members": {
            "post": {
                "tags": [
                    "Admin User Groups"
                ],
                "summary": "Add user to group",
                "description": "",
                "operationId": "aa4b7892f04578152561151128efadb4",
                "requestBody": {},
                "responses": {
                    "200": {
                        "description": "successful operation, returns list of group members",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/admin/user-groups/{id}/members/{user_id}": {
            "delete": {
                "tags": [
                    "Admin User Groups"
                ],
                "summary": "Add user to group",
                "description": "",
                "operationId": "3134135e9d643d4231a4eb253022c0cc",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "user_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation, returns list of group members",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/admin/users/{id}/interests": {
            "get": {
                "tags": [
                    "Admin User Interests"
                ],
                "summary": "Get user interests",
                "description": "",
                "operationId": "161998e8167834b30976ddc5e8024ac7",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation, returns list of user interests",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Admin User Interests"
                ],
                "summary": "Set user interests",
                "description": "Set user interests",
                "operationId": "6cde70ea763ad38995d40bb8796179fa",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "interests": {
                                        "description": "Ids of categories to be set",
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "format": "int64"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation, returns list of user interests",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Admin User Interests"
                ],
                "summary": "Add single user interest",
                "description": "Add single user interest",
                "operationId": "de4a9d433ded2aa83764e3ef77fe9c83",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "interest_id"
                                ],
                                "properties": {
                                    "interest_id": {
                                        "description": "Id of category to be added",
                                        "type": "integer",
                                        "format": "int64"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation, returns list of user interests",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/admin/users/{id}/interests/{interest_id}": {
            "delete": {
                "tags": [
                    "Admin User Interests"
                ],
                "summary": "Add single user interest",
                "description": "",
                "operationId": "3ce0bb1b20fc0ec2e1df55164db160e0",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "interest_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation, returns list of user interests",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/admin/users/{id}/settings": {
            "get": {
                "tags": [
                    "Admin User Settings"
                ],
                "summary": "Get user settings",
                "description": "",
                "operationId": "8cd73f5c43aac35487ccc3ae96a326cd",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation, returns list of user settings",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Admin User Settings"
                ],
                "summary": "Set user setting (removes settings not sent)",
                "operationId": "627fa0b4345ae425ec538acb5a7123da",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {},
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Admin User Settings"
                ],
                "summary": "Update user setting(s) without changing other settings",
                "operationId": "d94fdda15a77a065cfc3be5ec05fdf47",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {},
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/admin/users": {
            "get": {
                "tags": [
                    "Admin Users"
                ],
                "summary": "Get users",
                "description": "",
                "operationId": "599183ff92f15962448cd009aec3c581",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "will search through first_name, last_name and email",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "role",
                        "in": "query",
                        "description": "user role",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "will check if user is_active",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "onboarding",
                        "in": "query",
                        "description": "will check if user completed onboarding",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "users created after this date",
                        "required": false,
                        "schema": {
                            "type": "datetime"
                        }
                    },
                    {
                        "name": "to",
                        "in": "query",
                        "description": "users created before this date",
                        "required": false,
                        "schema": {
                            "type": "datetime"
                        }
                    },
                    {
                        "name": "gt_last_login_day",
                        "in": "query",
                        "description": "users last login greater equal then X days",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "lt_last_login_day",
                        "in": "query",
                        "description": "users last login less or equal then X days",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation, returns list of Users",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Admin Users"
                ],
                "summary": "Create user",
                "description": "",
                "operationId": "e7f83a323c31751aa19a695e189cdfc7",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation, returns created User data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/admin/users/{id}": {
            "get": {
                "tags": [
                    "Admin Users"
                ],
                "summary": "Get user",
                "description": "",
                "operationId": "2ece7c6c5c236c8370ee6d5eb59fbfaa",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation, returns User data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Admin Users"
                ],
                "summary": "Delete user",
                "description": "",
                "operationId": "0e7d6e862c5aa5fd0c39d825be87d4c9",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid id"
                    },
                    "404": {
                        "description": "User not found"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/admin/user/{id}": {
            "put": {
                "tags": [
                    "Admin Users"
                ],
                "summary": "Update/Replace user data (will overwrite unset fields with nulls)",
                "description": "",
                "operationId": "ed15144feff97fe05f6067f179ce4f7d",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid id"
                    },
                    "404": {
                        "description": "User not found"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Admin Users"
                ],
                "summary": "Partial Update User (will only change sent fields)",
                "description": "",
                "operationId": "22e56708437df94231942c5e659fb1af",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid id"
                    },
                    "404": {
                        "description": "User not found"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/admin/users/{id}/avatar": {
            "post": {
                "tags": [
                    "Admin Users"
                ],
                "description": "Upload avatar",
                "operationId": "2de6cd14e4c60b991ab75296bff312af",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UserAvatar"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "422": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Admin Users"
                ],
                "description": "Delete avatar",
                "operationId": "fc79782cd69e58bcf60ff83ca025bbc3",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "422": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/auth/password/forgot": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Password forget call",
                "operationId": "03ee141104498f34c86355712f88e4fb",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "user@escola-lms.com"
                                    },
                                    "return_url": {
                                        "type": "string",
                                        "example": "https://escolalms.com/password-reset"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/api/auth/password/reset": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Password reset",
                "operationId": "ce6dd3874bbda7a869d645fb92a94f3c",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "user@escola-lms.com"
                                    },
                                    "token": {
                                        "type": "string",
                                        "example": "hFD4UpgzTMNBeCGyfUrbvHtDb2yzSnuE"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "zaq1@WSX"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/api/auth/refresh": {
            "get": {
                "tags": [
                    "Auth"
                ],
                "summary": "Refresh access token",
                "operationId": "3cdb39a8126fbf6357edc7b1c10b72cc",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/auth/social/{provider}": {
            "get": {
                "tags": [
                    "Auth"
                ],
                "summary": "Redirect to social login",
                "operationId": "f1658d0b99ad89b546445268b526e126",
                "parameters": [
                    {
                        "name": "provider",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "facebook",
                                "google"
                            ]
                        }
                    }
                ],
                "responses": {
                    "302": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/api/auth/social/{provider}/callback": {
            "get": {
                "tags": [
                    "Auth"
                ],
                "summary": "Redirect after sucessfull login",
                "operationId": "55846b54c1cf0924b53f46b4ed855fa6",
                "parameters": [
                    {
                        "name": "provider",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "facebook",
                                "google"
                            ]
                        }
                    }
                ],
                "responses": {
                    "302": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/api/auth/email/verify/{id}/{hash}": {
            "get": {
                "tags": [
                    "Auth"
                ],
                "summary": "Email verification",
                "operationId": "8b92b54ba65c18efa951cfa0cbe954a5",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "hash",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/api/auth/email/resend": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Resend email verification",
                "operationId": "d1574b5c1b889d9c0dca8b48a56c3615",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "user@escola-lms.com"
                                    },
                                    "return_url": {
                                        "type": "string",
                                        "example": "https://escolalms.com/email/verify"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/api/auth/registerable-groups/": {
            "get": {
                "tags": [
                    "Auth"
                ],
                "summary": "List registerable groups",
                "description": "",
                "operationId": "a627c12cb5a66bbde697875c6efd56e3",
                "responses": {
                    "200": {
                        "description": "successful operation, returns list of groups",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "description": "User login",
                "operationId": "a2a8e43b1a0a22a294ade9a4094e9ee4",
                "parameters": [
                    {
                        "name": "email",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "remember_me",
                        "in": "query",
                        "schema": {
                            "enum": [
                                0,
                                1
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "422": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/api/auth/logout": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "description": "User logout",
                "operationId": "ed5c7099d18ffa01da361e7e8535f80c",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/profile/me": {
            "get": {
                "tags": [
                    "Profile"
                ],
                "description": "Get logged user info",
                "operationId": "f77f4d866a5b68a935ae0d47b303316e",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "422": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Profile"
                ],
                "description": "Update the profile",
                "operationId": "bc4b0a7cb29da7847017a15ec26181da",
                "parameters": [
                    {
                        "name": "first_name",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "last_name",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "age",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "gender",
                        "in": "query",
                        "description": "1 - male, 2 - female",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "country",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "city",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "street",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "postcode",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "422": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/profile/me-auth": {
            "put": {
                "tags": [
                    "Profile"
                ],
                "description": "Update the profile authorization data",
                "operationId": "24bdbb87b2fff756023e9c6767b9829b",
                "parameters": [
                    {
                        "name": "email",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "422": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/profile/password": {
            "put": {
                "tags": [
                    "Profile"
                ],
                "description": "Update password",
                "operationId": "1a99c343e885b7966acd6a2ba86e0c1a",
                "parameters": [
                    {
                        "name": "current_password",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "new_password",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "new_confirm_password",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "422": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/profile/interests": {
            "put": {
                "tags": [
                    "Profile"
                ],
                "summary": "Update user interests",
                "operationId": "03c58ed8e8547dad6c083ab3d822692f",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "interests": {
                                        "description": "Array categories ids",
                                        "type": "array",
                                        "items": {
                                            "type": "number"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/profile/upload-avatar": {
            "post": {
                "tags": [
                    "Profile"
                ],
                "description": "Upload avatar",
                "operationId": "19db5eae87560ddaae6e4c1243c4867a",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UserAvatar"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "422": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/profile/delete-avatar": {
            "delete": {
                "tags": [
                    "Profile"
                ],
                "description": "Delete avatar",
                "operationId": "6c785ec66c8ca0e59b1fdaa28b92ef15",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "422": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/profile/settings": {
            "get": {
                "tags": [
                    "Profile"
                ],
                "description": "Get user settings",
                "operationId": "12ed1a5df5d70506fd9576b92b6e82bf",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "422": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Profile"
                ],
                "summary": "Update user settings",
                "operationId": "f1ca230bad78c77d7b9dd6269ba918f9",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "setting-key": {
                                        "description": "Example setting",
                                        "type": "object",
                                        "example": "example-value"
                                    },
                                    "setting-key2": {
                                        "description": "Example setting",
                                        "type": "object",
                                        "example": "example-value2"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/auth/register": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "description": "Register new user",
                "operationId": "34fc21c478fa9f911cf3bed6ef92cbfd",
                "parameters": [
                    {
                        "name": "first_name",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "last_name",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "password_confirmation",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "return_url",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "https://escolalms.com/email/verify"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/api/admin/orders": {
            "get": {
                "tags": [
                    "Admin Orders"
                ],
                "description": "Search orders",
                "operationId": "3262e26845c9f63908ab9e3a327ae7a3",
                "parameters": [
                    {
                        "name": "order_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "created_at",
                                "updated_at",
                                "user_id"
                            ]
                        }
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "ASC",
                                "DESC"
                            ]
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Pagination Page Number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Pagination Per Page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15
                        }
                    },
                    {
                        "name": "user_id",
                        "in": "query",
                        "description": "User (buyer) ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "product_id",
                        "in": "query",
                        "description": "Product ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "productable_id",
                        "in": "query",
                        "description": "Productable ID (for example Course Id)",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "productable_type",
                        "in": "query",
                        "description": "Productable type (class) - required if productable_id is sent",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "422": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/admin/orders/{id}": {
            "get": {
                "tags": [
                    "Admin Orders"
                ],
                "summary": "Display the specified Order",
                "description": "Get Order",
                "operationId": "4adc791fab51e5210d86900044c98c39",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Order",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/admin/products": {
            "get": {
                "tags": [
                    "Admin Products"
                ],
                "description": "Search products",
                "operationId": "3ae395120207e00ffce7d6a87c8af16a",
                "parameters": [
                    {
                        "name": "order_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "created_at",
                                "updated_at",
                                "name"
                            ]
                        }
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "ASC",
                                "DESC"
                            ]
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Pagination Page Number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Pagination Per Page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15
                        }
                    },
                    {
                        "name": "productable_id",
                        "in": "query",
                        "description": "Productable ID (for example Course Id)",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "productable_type",
                        "in": "query",
                        "description": "Productable type (class) - required if productable_id is sent",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "free",
                        "in": "query",
                        "description": "Find free (price = 0)",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Partial name filter",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Type (`single` or `bundle`)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "purchasable",
                        "in": "query",
                        "description": "Purchasable filter",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "422": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/admin/products/": {
            "post": {
                "tags": [
                    "Admin Product"
                ],
                "description": "Create product",
                "operationId": "e4609018067c9c84927d21895c3223b1",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "price"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "price": {
                                        "type": "integer"
                                    },
                                    "price_old": {
                                        "type": "integer"
                                    },
                                    "tax_rate": {
                                        "type": "integer"
                                    },
                                    "extra_fees": {
                                        "type": "integer"
                                    },
                                    "purchasable": {
                                        "type": "boolean"
                                    },
                                    "teaser_url": {
                                        "type": "string"
                                    },
                                    "poster": {
                                        "description": "image upload",
                                        "type": "string"
                                    },
                                    "duration": {
                                        "type": "string"
                                    },
                                    "limit_per_user": {
                                        "type": "integer"
                                    },
                                    "limit_total": {
                                        "type": "integer"
                                    },
                                    "productables": {
                                        "type": "array",
                                        "items": {}
                                    },
                                    "categories": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    },
                                    "tags": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "422": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/admin/products/{id}": {
            "get": {
                "tags": [
                    "Admin Products"
                ],
                "description": "Read product",
                "operationId": "43c19a1c9ac248e509d420423ac6dc8b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "422": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Admin Product"
                ],
                "description": "Create product",
                "operationId": "d6d16ee0ef6b55782204e390b65ff2fd",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/json": {
                            "schema": {
                                "required": [],
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "price": {
                                        "type": "integer"
                                    },
                                    "price_old": {
                                        "type": "integer"
                                    },
                                    "tax_rate": {
                                        "type": "integer"
                                    },
                                    "extra_fees": {
                                        "type": "integer"
                                    },
                                    "purchasable": {
                                        "type": "boolean"
                                    },
                                    "teaser_url": {
                                        "type": "string"
                                    },
                                    "poster": {
                                        "description": "image upload",
                                        "type": "string"
                                    },
                                    "duration": {
                                        "type": "string"
                                    },
                                    "limit_per_user": {
                                        "type": "integer"
                                    },
                                    "limit_total": {
                                        "type": "integer"
                                    },
                                    "productables": {
                                        "type": "array",
                                        "items": {}
                                    },
                                    "categories": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    },
                                    "tags": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "422": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Admin Products"
                ],
                "description": "Delete product",
                "operationId": "1149b916a12660eecaa24b0cdee69638",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "422": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/admin/products/{id}/attach": {
            "post": {
                "tags": [
                    "Admin Product"
                ],
                "description": "Attach product to user",
                "operationId": "9c60ee94d636884077756457473f8c76",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Product",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/json": {
                            "schema": {
                                "required": [
                                    "user_id"
                                ],
                                "properties": {
                                    "user_id": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "422": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/admin/products/{id}/detach": {
            "post": {
                "tags": [
                    "Admin Product"
                ],
                "description": "Detach product from user",
                "operationId": "c504f431d29c7754347942e311b251a7",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Product",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/json": {
                            "schema": {
                                "required": [
                                    "user_id"
                                ],
                                "properties": {
                                    "user_id": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "422": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/admin/products/{id}/trigger-event-manually": {
            "get": {
                "tags": [
                    "Admin Product"
                ],
                "summary": "Manually triggered event for users of the product",
                "operationId": "29ccc2a9ac1e4846442afe175e62db95",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Product",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Event dispatched successfully"
                    },
                    "401": {
                        "description": "endpoint requires authentication"
                    },
                    "403": {
                        "description": "user doesn't have required access rights"
                    },
                    "422": {
                        "description": "one of the parameters has invalid format"
                    },
                    "500": {
                        "description": "server-side error"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/admin/productables/": {
            "get": {
                "tags": [
                    "Admin Product"
                ],
                "description": "Get list of all productables",
                "operationId": "6e6040ec84456d4351131516d2e4bb8c",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "422": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/admin/productables/attach": {
            "post": {
                "tags": [
                    "Admin Products"
                ],
                "description": "Attach productable to user",
                "operationId": "14253683f4e9c43c218c1bd380ad3224",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/json": {
                            "schema": {
                                "required": [
                                    "productable_id",
                                    "productable_type",
                                    "user_id"
                                ],
                                "properties": {
                                    "productable_id": {
                                        "type": "integer"
                                    },
                                    "productable_type": {
                                        "type": "string"
                                    },
                                    "user_id": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "422": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/admin/productables/detach": {
            "post": {
                "tags": [
                    "Admin Product"
                ],
                "description": "Detach product from user",
                "operationId": "58eba3dc2979d98ad0286e52e8adab5c",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/json": {
                            "schema": {
                                "required": [
                                    "productable_id",
                                    "productable_type",
                                    "user_id"
                                ],
                                "properties": {
                                    "productable_id": {
                                        "type": "integer"
                                    },
                                    "productable_type": {
                                        "type": "string"
                                    },
                                    "user_id": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "422": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/admin/productables/registered": {
            "get": {
                "tags": [
                    "Admin Product"
                ],
                "description": "List of registered Productable types",
                "operationId": "4b38a4eead2ce6e93ce2d702c780975a",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "422": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/admin/productables/product": {
            "get": {
                "tags": [
                    "Admin Product"
                ],
                "description": "Get single product for this productable (if it exists)",
                "operationId": "cf3cbdfd41036d193ae842946e780bbe",
                "parameters": [
                    {
                        "name": "productable_type",
                        "in": "query",
                        "description": "Productable class",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "productable_id",
                        "in": "query",
                        "description": "Productable id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "422": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/cart": {
            "get": {
                "tags": [
                    "Cart"
                ],
                "description": "Get cart details",
                "operationId": "764bd0113215a87ea5b597699b82d6f9",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "422": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/cart/pay": {
            "post": {
                "tags": [
                    "Cart"
                ],
                "description": "Pay for cart",
                "operationId": "a9183308a576feb0f769f81a32d6cb21",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/json": {
                            "schema": {
                                "required": [
                                    "paymentMethodId"
                                ],
                                "properties": {
                                    "paymentMethodId": {
                                        "type": "string"
                                    },
                                    "client_name": {
                                        "type": "string"
                                    },
                                    "client_email": {
                                        "type": "string"
                                    },
                                    "client_street": {
                                        "type": "string"
                                    },
                                    "client_street_number": {
                                        "type": "string"
                                    },
                                    "client_postal": {
                                        "type": "string"
                                    },
                                    "client_city": {
                                        "type": "string"
                                    },
                                    "client_country": {
                                        "type": "string"
                                    },
                                    "client_company": {
                                        "type": "string"
                                    },
                                    "client_taxid": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "422": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/cart/products": {
            "post": {
                "tags": [
                    "Cart"
                ],
                "description": "Add product to cart and/or set product quantity",
                "operationId": "6688dfed39dcadc4dcb28539ea3eb8fb",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/json": {
                            "schema": {
                                "required": [
                                    "id"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "integer"
                                    },
                                    "quantity": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "422": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/cart/add": {
            "post": {
                "tags": [
                    "Cart"
                ],
                "description": "Add productable to cart",
                "operationId": "ab576ab7ba6aa2869d8fc42755c4deb8",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/json": {
                            "schema": {
                                "required": [
                                    "productable_id",
                                    "productable_type"
                                ],
                                "properties": {
                                    "productable_id": {
                                        "type": "integer"
                                    },
                                    "productable_type": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "422": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/cart/products/{id}": {
            "delete": {
                "tags": [
                    "Cart"
                ],
                "description": "Remove product from cart",
                "operationId": "b84150a918fa0fdbbc842e8bbe1629c5",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "product id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "422": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/orders": {
            "get": {
                "tags": [
                    "Orders"
                ],
                "description": "Search orders",
                "operationId": "8997737565f012fc6483d7874fed7375",
                "parameters": [
                    {
                        "name": "order_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "created_at",
                                "updated_at",
                                "user_id"
                            ]
                        }
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "ASC",
                                "DESC"
                            ]
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Pagination Page Number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Pagination Per Page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15
                        }
                    },
                    {
                        "name": "product_id",
                        "in": "query",
                        "description": "Product ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "productable_id",
                        "in": "query",
                        "description": "Productable ID (for example Course Id)",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "productable_type",
                        "in": "query",
                        "description": "Productable type (class) - required if productable_id is sent",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "422": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/orders/{id}": {
            "get": {
                "tags": [
                    "Orders"
                ],
                "summary": "Display the specified Order",
                "description": "Get Order",
                "operationId": "969ea70f5e18061c59fd92acf7e9a661",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Order",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/products": {
            "get": {
                "tags": [
                    "Products"
                ],
                "description": "Search products",
                "operationId": "697a6765742348342c80652460b71213",
                "parameters": [
                    {
                        "name": "order_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "created_at",
                                "updated_at",
                                "name"
                            ]
                        }
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "ASC",
                                "DESC"
                            ]
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Pagination Page Number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Pagination Per Page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15
                        }
                    },
                    {
                        "name": "productable_id",
                        "in": "query",
                        "description": "Productable ID (for example Course Id)",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "productable_type",
                        "in": "query",
                        "description": "Productable type (class) - required if productable_id is sent",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "free",
                        "in": "query",
                        "description": "Find free (price = 0)",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Partial name filter",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Type (`single` or `bundle`)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "422": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/products/{id}": {
            "get": {
                "tags": [
                    "Products"
                ],
                "description": "Read product",
                "operationId": "fb9c92b0b6dc4cdad6b2fd1e65da04da",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "422": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/categories": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "description": "Get Categories",
                "operationId": "48a08353cd0b219365035661f7d532ce",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "422": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Categories"
                ],
                "summary": "Category create",
                "description": "Create single Categories",
                "operationId": "126bfa640341a4d1a45f8377efb4fb78",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Dokumentacja"
                                    },
                                    "icon_class": {
                                        "type": "string",
                                        "example": "fa-business-time"
                                    },
                                    "is_active": {
                                        "type": "bool",
                                        "example": "true"
                                    },
                                    "parent_id": {
                                        "type": "?integer",
                                        "example": "null"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "422": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/categories/tree": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "description": "Get Categories Tree",
                "operationId": "27694b673ff6d5c78af820806e45bfd7",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "422": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/api/categories/{id}": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "description": "Get single Categories",
                "operationId": "707a68073fb715968f89b631d9e3502a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "422": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Categories"
                ],
                "summary": "Update category",
                "description": "Update single Categories",
                "operationId": "15486aa520a77ec86e4a719cc28aca93",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Dokumentacja"
                                    },
                                    "icon_class": {
                                        "type": "string",
                                        "example": "fa-business-time"
                                    },
                                    "is_active": {
                                        "type": "bool",
                                        "example": "true"
                                    },
                                    "parent_id": {
                                        "type": "?integer",
                                        "example": "null"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "422": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Categories"
                ],
                "summary": "Destroy category",
                "description": "Destroy the specified category",
                "operationId": "8419a959f8ee2f61ff137604d2760b76",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "422": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/consultations/report-term/{orderItemId}": {
            "post": {
                "tags": [
                    "Consultations"
                ],
                "summary": "Report term with bought consultation",
                "description": "Report term consultation",
                "operationId": "b81194c4d5843f87b49d1857ff38f192",
                "parameters": [
                    {
                        "name": "orderItemId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "term": {
                                        "type": "string",
                                        "example": "2022-10-12 10:45"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/consultations/approve-term/{consultationTermId}": {
            "get": {
                "tags": [
                    "Consultations"
                ],
                "description": "Approve reported term with consultation author",
                "operationId": "14336bd23f3284508ad8de5afb521786",
                "parameters": [
                    {
                        "name": "consultationTermId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/consultations/reject-term/{consultationTermId}": {
            "get": {
                "tags": [
                    "Consultations"
                ],
                "description": "Reject reported term with consultation author",
                "operationId": "5c4f86d5ae0a0ab424785c444e0cc03b",
                "parameters": [
                    {
                        "name": "consultationTermId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/consultations/generate-jitsi/{consultationTermId}": {
            "get": {
                "tags": [
                    "Consultations"
                ],
                "description": "Generate jitsi object for approved consultation term",
                "operationId": "ab326829fb10fb18a2be4de7f8e85baa",
                "parameters": [
                    {
                        "name": "consultationTermId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/consultations": {
            "get": {
                "tags": [
                    "Consultations"
                ],
                "summary": "Get a listing of the Consultations.",
                "description": "Get all Consultations",
                "operationId": "43f1b2cf7dcbfa54fdf21eafc0277b29",
                "parameters": [
                    {
                        "name": "order_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "finished_at",
                                "started_at",
                                "created_at",
                                "name",
                                "base_price"
                            ]
                        }
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "ASC",
                                "DESC"
                            ]
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Pagination Page Number",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "default": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Pagination Per Page",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "default": 15
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Consultation name %LIKE%",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "base_price",
                        "in": "query",
                        "description": "Consultation base_price >= ",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Consultation status == ",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/api/consultations/me": {
            "get": {
                "tags": [
                    "Consultations"
                ],
                "summary": "Get a listing of the Consultations bought by user.",
                "description": "Get a listing of the Consultations bought by user",
                "operationId": "295c70c377b363dae5cbc81cc3c61e90",
                "parameters": [
                    {
                        "name": "order_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "finished_at",
                                "started_at",
                                "created_at",
                                "name",
                                "base_price"
                            ]
                        }
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "ASC",
                                "DESC"
                            ]
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Pagination Page Number",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "default": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Pagination Per Page",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "default": 15
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Consultation name %LIKE%",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "base_price",
                        "in": "query",
                        "description": "Consultation base_price >= ",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Consultation status == ",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/consultations/proposed-terms/{orderItemId}": {
            "get": {
                "tags": [
                    "Consultations"
                ],
                "description": "Get proposedTerm For OrderItem",
                "operationId": "e1eb4ed7728b0faee0e4af5fe2a63c19",
                "parameters": [
                    {
                        "name": "orderItemId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/consultations/{id}": {
            "get": {
                "tags": [
                    "Consultations"
                ],
                "summary": "Display the specified Consultation",
                "description": "Get Consultation",
                "operationId": "e5b533c978d25b13cc949c6dbe46158e",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Consultation",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/api/consultations/my-schedule": {
            "get": {
                "tags": [
                    "Consultations"
                ],
                "description": "Get Consultation schedule for tutor",
                "operationId": "848beb73a29b5e048e9de91c30aeaddf",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/admin/consultations": {
            "get": {
                "tags": [
                    "Admin Consultations"
                ],
                "operationId": "f33d2438b33d72e192a26367190f1ca8",
                "parameters": [
                    {
                        "name": "order_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "finished_at",
                                "started_at",
                                "created_at",
                                "name",
                                "base_price"
                            ]
                        }
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "ASC",
                                "DESC"
                            ]
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Pagination Page Number",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "default": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Pagination Per Page",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "default": 15
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Consultation name %LIKE%",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "base_price",
                        "in": "query",
                        "description": "Consultation base_price >= ",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Consultation status == ",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Admin Consultations"
                ],
                "summary": "Store a newly created Consultation in storage",
                "description": "Store Consultation",
                "operationId": "529eb94ab5042d477bb4de6634e810f3",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Consultation"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/admin/consultations/{id}": {
            "get": {
                "tags": [
                    "Admin Consultations"
                ],
                "summary": "Display the specified Consultation",
                "description": "Get Consultation",
                "operationId": "d40dc2ba9e7be00c9333b026f7656a35",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Consultation",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Admin Consultations"
                ],
                "summary": "Update the specified Consultation in storage",
                "description": "Update Consultation",
                "operationId": "7a1b879877cf3289d37bffd787a45ae5",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Consultation",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Consultation"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Admin Consultations"
                ],
                "summary": "Remove the specified Consultation from storage",
                "description": "Delete Consultation",
                "operationId": "46ada489685b1f9cbdc6ec11d1bc9f9f",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Consultation",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/admin/consultations/{id}/schedule": {
            "get": {
                "tags": [
                    "Consultations"
                ],
                "description": "Get Consultation schedule",
                "operationId": "eed2da713303ced7539d6c0ad5d79077",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Consultation",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "date_from",
                        "in": "query",
                        "description": "Course term date from",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "date_to",
                        "in": "query",
                        "description": "Course term date to",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Course term status: not_reported, reported, reject, approved",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/admin/change-term": {
            "post": {
                "tags": [
                    "Admin Consultations"
                ],
                "summary": "Change term in consultation ",
                "description": "Change term consultation",
                "operationId": "bf054a1bcc3131aeb976e10e7e08a96e",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "executed_at": {
                                        "type": "string",
                                        "example": "New term consultation"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/core/packages": {
            "get": {
                "tags": [
                    "Core Admin"
                ],
                "summary": "List installed escolalms packages",
                "description": "List of installed escolalms packages with versions",
                "operationId": "699ad377e3d00475b71a13ffd3b3e067",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/admin/courses/{id}/export": {
            "get": {
                "tags": [
                    "Admin Courses"
                ],
                "description": "Exports course to ZIP package ",
                "operationId": "4d345f589c999b1f02e785b1566386fc",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "422": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/admin/courses/zip/import": {
            "post": {
                "tags": [
                    "Admin Courses"
                ],
                "description": "Imports course from ZIP package ",
                "operationId": "6d4f418d042a8de8c15875c41ece860f",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "file": {
                                        "type": "file",
                                        "format": "file"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Course imported successfully"
                    },
                    "401": {
                        "description": "endpoint requires authentication"
                    },
                    "403": {
                        "description": "user doesn't have required access rights"
                    },
                    "500": {
                        "description": "server-side error"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/admin/courses/{id}/clone": {
            "get": {
                "tags": [
                    "Admin Courses"
                ],
                "description": "Course cloning",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "422": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/courses": {
            "get": {
                "tags": [
                    "Courses"
                ],
                "summary": "Get a listing of the Courses.",
                "description": "Get all Courses",
                "parameters": [
                    {
                        "name": "order_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "created_at",
                                "title",
                                "duration"
                            ]
                        }
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "ASC",
                                "DESC"
                            ]
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Pagination Page Number",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "default": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Pagination Per Page",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "default": 15
                        }
                    },
                    {
                        "name": "title",
                        "in": "query",
                        "description": "Course title %LIKE%",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "category_id",
                        "in": "query",
                        "description": "Category ID. When applied all courses with given cat_id and children categories are searched",
                        "required": false,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "authors",
                        "in": "query",
                        "description": "Authors",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    },
                    {
                        "name": "tag",
                        "in": "query",
                        "description": "Tag name exactly",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "tag[]",
                        "in": "query",
                        "description": "An array of tags",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "ids[]",
                        "in": "query",
                        "description": "An array of IDs",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "number"
                            }
                        }
                    },
                    {
                        "name": "free",
                        "in": "query",
                        "description": "Will show only free courses",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/api/admin/courses": {
            "get": {
                "tags": [
                    "Admin Courses"
                ],
                "summary": "Get a listing of the Courses.",
                "description": "Get all Courses",
                "operationId": "949afdf973bdc32fb4e3d09c683f4736",
                "parameters": [
                    {
                        "name": "order_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "created_at",
                                "title",
                                "duration"
                            ]
                        }
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "ASC",
                                "DESC"
                            ]
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Pagination Page Number",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "default": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Pagination Per Page",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "default": 15
                        }
                    },
                    {
                        "name": "title",
                        "in": "query",
                        "description": "Course title %LIKE%",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "category_id",
                        "in": "query",
                        "description": "Category ID. When applied all courses with given cat_id and children categories are searched",
                        "required": false,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "authors",
                        "in": "query",
                        "description": "Authors",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    },
                    {
                        "name": "tag",
                        "in": "query",
                        "description": "Tag name exactly",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "free",
                        "in": "query",
                        "description": "Will show only free courses",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Course status: published, draft, archived",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Admin Courses"
                ],
                "summary": "Store a newly created Course in storage",
                "description": "Store Course",
                "operationId": "6aafc0bc51e2e35cc7ce64275bc614f0",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Course"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Course"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/admin/courses/{id}": {
            "get": {
                "tags": [
                    "Admin Courses"
                ],
                "summary": "Display the specified Course",
                "description": "Get Course",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Course",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Admin Courses"
                ],
                "summary": "Update the specified Course in storage",
                "description": "Update Course",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Course",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Course"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Admin Courses"
                ],
                "summary": "Update the specified Course in storage",
                "description": "Update Course",
                "operationId": "7fd83c667efca50738408cd8b6eb07d5",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Course",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Course"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Admin Courses"
                ],
                "summary": "Remove the specified Course from storage",
                "description": "Delete Course",
                "operationId": "af1251472dff3820fcf5635dd4f31aed",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Course",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/courses/{id}": {
            "get": {
                "tags": [
                    "Courses"
                ],
                "summary": "Display the specified Course",
                "description": "Get Course",
                "operationId": "ac094110c32a7652583ef86ee8037d60",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Course",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/api/admin/courses/{id}/program": {
            "get": {
                "tags": [
                    "Admin Courses"
                ],
                "summary": "Display the specified Course program/curriculum/syllabus",
                "description": "Get Course",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Course",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/courses/{id}/program": {
            "get": {
                "tags": [
                    "Courses"
                ],
                "summary": "Display the specified Course program/curriculum/syllabus. No token required when course is free",
                "description": "Get Course",
                "operationId": "266724e5be1f5afa88c63b86c20c28cb",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Course",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/courses/{id}/scorm": {
            "get": {
                "tags": [
                    "Courses"
                ],
                "summary": "Display the specified Course scorm View to be embeede with iframe",
                "description": "Get Course",
                "operationId": "2e8515a1c635b3d7589e5344f49d4891",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Course",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "text/html": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/admin/courses/sort": {
            "post": {
                "tags": [
                    "Admin Courses"
                ],
                "summary": "Sorts Lessons or Topics",
                "description": "Sorts Lessons or Topics by sending course_id, class (Topic or Lesson) and array of tuple [class_id, order]. Example\n     * `{\"class\":\"Lesson\",\"orders\":[[3,0],[2,1],[4,2],[5,3],[6,4],[7,5],[1,6],[71,7]], \"course_id\":1}`\n     * ",
                "operationId": "15004b07fb07cb8c2c0e7181aa997a23",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "course_id": {
                                        "type": "integer"
                                    },
                                    "class": {
                                        "type": "string"
                                    },
                                    "orders": {
                                        "type": "array",
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "type": "integer"
                                            }
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/tags/uniqueTags": {
            "get": {
                "tags": [
                    "Courses"
                ],
                "summary": "Endpoints get unique tags from active courses",
                "description": "Get unique tags",
                "operationId": "09456762e03cbb56d3db695bb3bf773c",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "text/html": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/tutors": {
            "get": {
                "tags": [
                    "Courses"
                ],
                "description": "Get Tutors",
                "operationId": "c9b57a345ae9fdca6dc5dea4062caa87",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "422": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/tutors/{id}": {
            "get": {
                "tags": [
                    "Courses"
                ],
                "description": "Get tutor course/author ID ",
                "operationId": "1c7d56df29168cae265f1ce1c3f6438a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "422": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/courses/progress": {
            "get": {
                "tags": [
                    "Courses"
                ],
                "description": "Get Progresses",
                "operationId": "f38c13e50f028895b45b14c94d288b74",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "422": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/courses/progress/{course_id}": {
            "get": {
                "tags": [
                    "Courses"
                ],
                "description": "Show user course progress",
                "operationId": "476ec8979cad6055de6abc3e2297c053",
                "parameters": [
                    {
                        "name": "course_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "422": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Courses"
                ],
                "description": "Show user course progress",
                "operationId": "cdec63c492b1354b876a927a77e90cf3",
                "parameters": [
                    {
                        "name": "course_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "progress[]",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "properties": {
                                    "topic_id": {
                                        "type": "integer"
                                    },
                                    "status": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "422": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/courses/progress/{topic_id}/ping": {
            "put": {
                "tags": [
                    "Courses"
                ],
                "description": "Update time in course by ping.",
                "operationId": "a55ffc9d253d527b5f63a8618f8e6061",
                "parameters": [
                    {
                        "name": "topic_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "422": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/courses/progress/{topic_id}/h5p": {
            "post": {
                "tags": [
                    "Courses"
                ],
                "description": "Update h5p progress in course quiz.",
                "operationId": "361936640d7dc3b7cec611ee5f42d49a",
                "parameters": [
                    {
                        "name": "topic_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "event": {
                                        "type": "string",
                                        "example": "http://adlnet.gov/expapi/verbs/attempted"
                                    },
                                    "data": {
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "422": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/admin/courses/{course_id}/access": {
            "get": {
                "tags": [
                    "Admin Courses"
                ],
                "summary": "Get list of users and groups with access to the course",
                "description": "Get list of users and groups with access to the course",
                "parameters": [
                    {
                        "name": "course_id",
                        "in": "path",
                        "description": "id of course",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/admin/courses/{course_id}/access/add": {
            "post": {
                "tags": [
                    "Admin Courses"
                ],
                "summary": "Add users and groups with access to the course",
                "description": "Add users and groups with access to the course",
                "operationId": "eb650e084d8433fac318a1d81cd43f90",
                "parameters": [
                    {
                        "name": "course_id",
                        "in": "path",
                        "description": "id of course",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "users": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    },
                                    "groups": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/admin/courses/{course_id}/access/remove": {
            "post": {
                "tags": [
                    "Admin Courses"
                ],
                "summary": "Remove users and groups with access to the course",
                "description": "Remove users and groups with access to the course",
                "operationId": "2ae1cd987923eb15ce6f619d6b3c11a6",
                "parameters": [
                    {
                        "name": "course_id",
                        "in": "path",
                        "description": "id of course",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "users": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    },
                                    "groups": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/admin/courses/{course_id}/access/set": {
            "post": {
                "tags": [
                    "Admin Courses"
                ],
                "summary": "Set users and groups with access to the course",
                "description": "Set users and groups with access to the course",
                "operationId": "25e3d6418403254639f0106bb77bff9b",
                "parameters": [
                    {
                        "name": "course_id",
                        "in": "path",
                        "description": "id of course",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "users": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    },
                                    "groups": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/admin/lessons": {
            "get": {
                "tags": [
                    "Admin Courses"
                ],
                "summary": "Get a listing of the Lessons.",
                "description": "Get all Lessons",
                "operationId": "0657b34a014defd02100a177052c40d3",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Admin Courses"
                ],
                "summary": "Store a newly created Lesson in storage",
                "description": "Store Lesson",
                "operationId": "5e9d45087a9fe9df6ff24309ffae12a9",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Lesson"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/admin/lessons/{id}": {
            "get": {
                "tags": [
                    "Admin Courses"
                ],
                "summary": "Display the specified Lesson",
                "description": "Get Lesson",
                "operationId": "d0df60691327740dcb50e9b2817bcde7",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Lesson",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Admin Courses"
                ],
                "summary": "Update the specified Lesson in storage",
                "description": "Update Lesson",
                "operationId": "00b48a07b57497bdf63449d6c7869a23",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Lesson",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Lesson"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Admin Courses"
                ],
                "summary": "Remove the specified Lesson from storage",
                "description": "Delete Lesson",
                "operationId": "58e17e8c6af3f9e151b8676e113b342e",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Lesson",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/admin/lessons/{id}/clone": {
            "post": {
                "tags": [
                    "Admin Courses"
                ],
                "summary": "Clone Lesson",
                "description": "Clone Lesson with topics",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Lesson",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/admin/topics": {
            "get": {
                "tags": [
                    "Admin Courses"
                ],
                "summary": "Get a listing of the Topics.",
                "description": "Get all Topics",
                "operationId": "83086b319d0f9c2e6e89120f75686284",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Admin Courses"
                ],
                "summary": "Store a newly created Topic in storage",
                "description": "Store Topic. Depending on `topicable_type` values are different. Endpoint does create both `Topic` and 1:1 related `Content` based on creating class ",
                "operationId": "3ae2ccc4a5350cb42acfff6bacbf5985",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Topic"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/admin/topics/{id}": {
            "get": {
                "tags": [
                    "Admin Courses"
                ],
                "summary": "Display the specified Topic",
                "description": "Get Topic",
                "operationId": "a253ef86dec60b9e4d483d57b2cc14f5",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Topic",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Admin Courses"
                ],
                "summary": "Update the specified Topic in storage",
                "description": "Update Topic",
                "operationId": "def3b8eed84f7748e6ce671dc6c0a40d",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Topic",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Topic"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Admin Courses"
                ],
                "summary": "Remove the specified Topic from storage",
                "description": "Delete Topic",
                "operationId": "c765803250f5678e2cbec27e8133700d",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Topic",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/admin/topics/types": {
            "get": {
                "tags": [
                    "Admin Courses"
                ],
                "summary": "Get a listing of the Availabe Topic Content Types Classes.",
                "description": "Get all Topic Contents",
                "operationId": "d509de84c8614d889ef7c41751c686f1",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/admin/topics/{id}/clone": {
            "post": {
                "tags": [
                    "Admin Courses"
                ],
                "summary": "Clone topic",
                "description": "Clone Topic.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Topic",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Topic cloned successfully",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/admin/topics/{topic_id}/resources/": {
            "get": {
                "tags": [
                    "Admin Courses"
                ],
                "summary": "Get list of resources",
                "description": "Get list of resources",
                "parameters": [
                    {
                        "name": "topic_id",
                        "in": "path",
                        "description": "id of Topic",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Admin Courses"
                ],
                "summary": "Post new resource",
                "description": "Post new resource",
                "operationId": "3e754f9f02c8ab1d899ee0690d3f8eb2",
                "parameters": [
                    {
                        "name": "topic_id",
                        "in": "path",
                        "description": "id of Topic",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "resource": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/admin/topics/{topic_id}/resources/{resource_id}": {
            "delete": {
                "tags": [
                    "Admin Courses"
                ],
                "summary": "Delete resource",
                "description": "Delete resource",
                "operationId": "6e0b1990fa272984ce832ecb665fadc0",
                "parameters": [
                    {
                        "name": "topic_id",
                        "in": "path",
                        "description": "id of Topic",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "resource_id",
                        "in": "path",
                        "description": "id of Resource",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Admin Courses"
                ],
                "summary": "Rename resource",
                "description": "Rename resource",
                "operationId": "a32a407f1a43bfcd473ab4cd323b09aa",
                "parameters": [
                    {
                        "name": "topic_id",
                        "in": "path",
                        "description": "id of Topic",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "resource_id",
                        "in": "path",
                        "description": "id of Resource",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/admin/csv/users": {
            "get": {
                "tags": [
                    "Admin CSV"
                ],
                "description": "Exports users to csv",
                "operationId": "5e29d0712a6da223f3d0e92738ef3ccd",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "will search through first_name, last_name and email",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "role",
                        "in": "query",
                        "description": "user role",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "will check if user is_active",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "onboarding",
                        "in": "query",
                        "description": "will check if user completed onboarding",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "users created after this date",
                        "required": false,
                        "schema": {
                            "type": "datetime"
                        }
                    },
                    {
                        "name": "to",
                        "in": "query",
                        "description": "users created before this date",
                        "required": false,
                        "schema": {
                            "type": "datetime"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/csv": {}
                        }
                    },
                    "422": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Admin CSV"
                ],
                "description": "Imports users from csv",
                "operationId": "7eedf08e9ac0a33c8d1117ed6526b8cd",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "file": {
                                        "type": "file",
                                        "format": "file"
                                    },
                                    "return_url": {
                                        "description": "Address where the new user set the password",
                                        "type": "string",
                                        "example": "https://escolalms.com/set-password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "401": {
                        "description": "endpoint requires authentication"
                    },
                    "403": {
                        "description": "user doesn't have required access rights"
                    },
                    "500": {
                        "description": "server-side error"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/invoices/{id}": {
            "get": {
                "tags": [
                    "FakturowniaIntegration"
                ],
                "summary": "Get invoice PDF identified by a given id identifier of order",
                "operationId": "6b5262e4a3b5f142bbf88862b7b9cf4d",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Order",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "401": {
                        "description": "endpoint requires authentication"
                    },
                    "403": {
                        "description": "user doesn't have required access rights"
                    },
                    "500": {
                        "description": "server-side error"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/admin/file/list": {
            "get": {
                "tags": [
                    "Files"
                ],
                "summary": "Lists files prefixed by given directory name",
                "parameters": [
                    {
                        "name": "directory",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "default": "/"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "int",
                            "default": "1"
                        }
                    },
                    {
                        "name": "perPage",
                        "in": "query",
                        "schema": {
                            "type": "int",
                            "default": "50"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "name": {
                                                "type": "string"
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "datetime"
                                            },
                                            "mime": {
                                                "type": "string",
                                                "format": "mime"
                                            },
                                            "url": {
                                                "type": "string",
                                                "format": "url"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "endpoint requires authentication"
                    },
                    "302": {
                        "description": "request contains invalid parameters"
                    },
                    "403": {
                        "description": "user doesn't have required access rights"
                    },
                    "405": {
                        "description": "Target directory access is not allowed"
                    },
                    "500": {
                        "description": "server-side error"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/admin/file/find": {
            "get": {
                "tags": [
                    "Files"
                ],
                "summary": "Lists files found by name",
                "operationId": "e44bf310b28fa6bb9db5ffdfde83bd0e",
                "parameters": [
                    {
                        "name": "directory",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "default": "/"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "int",
                            "default": "1"
                        }
                    },
                    {
                        "name": "perPage",
                        "in": "query",
                        "schema": {
                            "type": "int",
                            "default": "50"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "name": {
                                                "type": "string"
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "datetime"
                                            },
                                            "mime": {
                                                "type": "string",
                                                "format": "mime"
                                            },
                                            "url": {
                                                "type": "string",
                                                "format": "url"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "endpoint requires authentication"
                    },
                    "302": {
                        "description": "request contains invalid parameters"
                    },
                    "403": {
                        "description": "user doesn't have required access rights"
                    },
                    "405": {
                        "description": "Target directory access is not allowed"
                    },
                    "500": {
                        "description": "server-side error"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/admin/file/upload": {
            "post": {
                "tags": [
                    "Files"
                ],
                "summary": "Upload files using multipart form-data",
                "operationId": "8330f052263ea8b57e1e056c6da07ca5",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "file[]",
                                    "target"
                                ],
                                "properties": {
                                    "file[]": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    },
                                    "target": {
                                        "type": "string",
                                        "default": "/"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "401": {
                        "description": "endpoint requires authentication"
                    },
                    "403": {
                        "description": "user doesn't have required access rights"
                    },
                    "409": {
                        "description": "one of the uploaded files already exists"
                    },
                    "422": {
                        "description": "server-side error"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/admin/file/move": {
            "post": {
                "tags": [
                    "Files"
                ],
                "summary": "Move the file from one path to another",
                "operationId": "4c85321835ff635cd0e1637f274c0c31",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "source_url",
                                    "destination_url"
                                ],
                                "properties": {
                                    "source_url": {
                                        "type": "string"
                                    },
                                    "destination_url": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "302": {
                        "description": "invalid request"
                    },
                    "401": {
                        "description": "endpoint requires authentication"
                    },
                    "403": {
                        "description": "user doesn't have required access rights"
                    },
                    "422": {
                        "description": "Couldn't perform the action"
                    },
                    "500": {
                        "description": "server-side error"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/admin/file/delete": {
            "delete": {
                "tags": [
                    "Files"
                ],
                "summary": "Delete given file",
                "operationId": "4e5e7d4cd112ef1a8019ea9de3dc0c3b",
                "parameters": [
                    {
                        "name": "url",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "file doesn't exists"
                    },
                    "401": {
                        "description": "endpoint requires authentication"
                    },
                    "403": {
                        "description": "user doesn't have required access rights"
                    },
                    "405": {
                        "description": "specified file is out of bounds of the allowed paths"
                    },
                    "500": {
                        "description": "server-side error"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/hh5p/content": {
            "get": {
                "tags": [
                    "H5P"
                ],
                "summary": "list of h5ps content in database",
                "description": "list of h5ps content in database",
                "operationId": "719f246c822185fa2c350733c2939184",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "page of pagination",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "items per page. If set to 0, returns ALL contents ",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "title",
                        "in": "query",
                        "description": "search items by title",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "library_id",
                        "in": "query",
                        "description": "search items by library_id",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/H5PContentList"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "validation error",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthorised",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "H5P"
                ],
                "summary": "Store h5p content in database",
                "description": "Store h5p content in database",
                "operationId": "a840b07625134cffa37abe1cdd0cac25",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/H5PContentStore"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "422": {
                        "description": "validation error",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthorised",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/hh5p/content/{id}": {
            "get": {
                "tags": [
                    "H5P"
                ],
                "summary": "Content settings for player",
                "description": "Content settings for player",
                "operationId": "c4d9cfec6bc0a14c4488b6fb1d9787e7",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of Content",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/H5PEditorSettings"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "H5P"
                ],
                "summary": "Updates h5p content in database",
                "description": "Updates h5p content in database",
                "operationId": "6e9a9228ed9cdf4a2a974c1d3cb2aee6",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of Content from DB",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/H5PContentStore"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "422": {
                        "description": "validation error",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthorised",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "H5P"
                ],
                "summary": "Deletes h5p content from database",
                "description": "Deletes h5p content from database",
                "operationId": "9a5a28403c33e310e4e01d52a8fe3340",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of content that will be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "422": {
                        "description": "validation error",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthorised",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/hh5p/content/upload": {
            "post": {
                "tags": [
                    "H5P"
                ],
                "summary": "Store h5p content from file in database",
                "description": "Store h5p content from file in database",
                "operationId": "953f11e50e63df512b1c11802b266b5f",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "h5p_file": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/hh5p/content/{id}/export": {
            "get": {
                "tags": [
                    "H5P"
                ],
                "summary": "Downloads h5p content to packagee",
                "description": "Downloads h5p content to package",
                "operationId": "fd8617215b5d9c1831428a7fdcceda86",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of content that will be exported",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "422": {
                        "description": "validation error",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthorised",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/hh5p/unused": {
            "delete": {
                "tags": [
                    "H5P"
                ],
                "summary": "Deletes all unused h5p",
                "description": "Deletes all unused h5p",
                "operationId": "9eedd3bc781b39f33bca2ea80968c7e2",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "422": {
                        "description": "validation error",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthorised",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/hh5p/editor": {
            "get": {
                "tags": [
                    "H5P"
                ],
                "summary": "Editor settings ",
                "description": "Editor settings",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/H5PEditorSettings"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/hh5p/editor/{id}": {
            "get": {
                "tags": [
                    "H5P"
                ],
                "summary": "Editor settings ",
                "description": "Editor settings",
                "operationId": "1c27ee51f9335ae3502191d03edf63a3",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of Content from DB. For initial editor (new content) id should be null",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/H5PEditorSettings"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/hh5p/files": {
            "post": {
                "tags": [
                    "H5P"
                ],
                "summary": "Store h5p files for h5p editor",
                "description": "Store h5p files for h5p editor",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/H5PContentFile"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/api/hh5p/files/{nonce}": {
            "post": {
                "tags": [
                    "H5P"
                ],
                "summary": "Store h5p files for h5p editor",
                "description": "Store h5p files for h5p editor",
                "operationId": "3c846d6b407b8633faa0f834799f1d99",
                "parameters": [
                    {
                        "name": "nonce",
                        "in": "path",
                        "description": "nonce of current editing file",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/H5PContentFile"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/api/hh5p/library": {
            "get": {
                "tags": [
                    "H5P"
                ],
                "summary": "Gets all h5p libraries in the database",
                "description": "Gets all h5p libraries in the database",
                "operationId": "3682a0e1eb87ab549ae806a8013e000c",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/H5PLibrary"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "H5P"
                ],
                "summary": "Store h5p library in database",
                "description": "Store h5p library in database",
                "operationId": "7a9d900af5e5ad9cd3cc95b9175c62b9",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "h5p_file": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/hh5p/library/{id}": {
            "delete": {
                "tags": [
                    "H5P"
                ],
                "summary": "Deletes h5p library from database",
                "description": "Deletes h5p library from database",
                "operationId": "42ae6ced35eaca98b5e2a55d4b16b245",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of library that will be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/hh5p/libraries": {
            "get": {
                "tags": [
                    "H5P"
                ],
                "summary": "H5P Editor Endpoint. Gets all h5p runnable libraries in the database. Called by  ",
                "description": "Gets all h5p runnable libraries in the database. Called by H5P Editor",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/H5PLibrary"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/hh5p/libraries?": {
            "get": {
                "tags": [
                    "H5P"
                ],
                "summary": "H5P Editor Endpoint. Get specific library object  ",
                "description": "Get specific library object",
                "operationId": "39b4dbd13b76b07e8170bb826e44c052",
                "parameters": [
                    {
                        "name": "machineName",
                        "in": "query",
                        "description": "machine Name of Library",
                        "schema": {
                            "type": "string"
                        },
                        "example": "H5P.ArithmeticQuiz"
                    },
                    {
                        "name": "majorVersion",
                        "in": "query",
                        "description": "major Version",
                        "schema": {
                            "type": "string"
                        },
                        "example": "1"
                    },
                    {
                        "name": "minorVersion",
                        "in": "query",
                        "description": "minor Version",
                        "schema": {
                            "type": "string"
                        },
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/H5PLibraryForEditor"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/cmi5/fetch": {
            "post": {
                "tags": [
                    "cmi5"
                ],
                "summary": "cmi5 token fetch",
                "operationId": "4522d9dea57722a3ac901286fccb96ce",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/api/cmi5/courses/{id}": {
            "get": {
                "tags": [
                    "cmi5"
                ],
                "summary": "Get Course cmi5 launch params",
                "description": "Course cmi5 launch params",
                "operationId": "07ddcceda17c62af34c2c72b15c334ef",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Course",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/mattermost/me": {
            "get": {
                "tags": [
                    "Mattermost"
                ],
                "summary": "List all of the available mattermost teams and channels for a user",
                "description": "ist all of the available mattermost teams and channels for a user",
                "operationId": "0920c908a9a258ccc6eb3086a47396af",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/mattermost/generate_credentials": {
            "get": {
                "tags": [
                    "Mattermost"
                ],
                "summary": "Generates user (creates one if not exists) credentials and sets a new random password",
                "description": "Generates user (creates one if not exists) credentials and sets a new random password",
                "operationId": "daa6c1aab1eeb77a2ba043f194576758",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/mattermost/reset_password": {
            "get": {
                "tags": [
                    "Mattermost"
                ],
                "summary": "Sends request for mattermost to send reset password link with email",
                "description": "Sends request for mattermost to send reset password link with email",
                "operationId": "4caea2ddd9b16f13320391523a5eb486",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/model-fields": {
            "get": {
                "tags": [
                    "Model Fields"
                ],
                "summary": "Lists available Model extended fields",
                "parameters": [
                    {
                        "name": "class_type",
                        "in": "query",
                        "description": "class type of which field is extended",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "list of available fields",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "map of templates identified by a slug value",
                                    "type": "object",
                                    "additionalProperties": {
                                        "$ref": "#/components/schemas/ModelField"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "endpoint requires authentication"
                    },
                    "403": {
                        "description": "user doesn't have required access rights"
                    },
                    "500": {
                        "description": "server-side error"
                    }
                }
            }
        },
        "/api/admin/model-fields": {
            "post": {
                "tags": [
                    "Admin Model Fields"
                ],
                "summary": "Create or update metafile",
                "operationId": "6211e456cb452c2381b0c50c0584b514",
                "requestBody": {
                    "description": "Metadata attributes",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Metadata"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Metadata created successfully"
                    },
                    "401": {
                        "description": "endpoint requires authentication"
                    },
                    "403": {
                        "description": "user doesn't have required access rights"
                    },
                    "422": {
                        "description": "one of the parameters has invalid format"
                    },
                    "500": {
                        "description": "server-side error"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Admin Model Fields"
                ],
                "summary": "delete metafile and related values from model",
                "operationId": "6c2d09dbdf590976fedd7055284f2517",
                "requestBody": {
                    "description": "Metadata attributes",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Metadata"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Metadata created successfully"
                    },
                    "401": {
                        "description": "endpoint requires authentication"
                    },
                    "403": {
                        "description": "user doesn't have required access rights"
                    },
                    "422": {
                        "description": "one of the parameters has invalid format"
                    },
                    "500": {
                        "description": "server-side error"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/notifications": {
            "get": {
                "tags": [
                    "Notifications"
                ],
                "summary": "Get notifications",
                "description": "Get paginated list of notifications sent using `database` channel",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Pagination Page Number",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "default": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Pagination Per Page",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/admin/notifications/{user}": {
            "get": {
                "tags": [
                    "Notifications Admin"
                ],
                "summary": "Get notifications",
                "description": "Get paginated list of notifications sent using `database` channel",
                "operationId": "25b9ccc713a6b63854688cffa925c6c3",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Pagination Page Number",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "default": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Pagination Per Page",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "default": 15
                        }
                    },
                    {
                        "name": "event",
                        "in": "query",
                        "description": "Event class filter",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "include_read",
                        "in": "query",
                        "description": "Include read notifications",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "date_from",
                        "in": "query",
                        "description": "From date filter",
                        "required": false,
                        "schema": {
                            "type": "date"
                        }
                    },
                    {
                        "name": "date_to",
                        "in": "query",
                        "description": "To date filter",
                        "required": false,
                        "schema": {
                            "type": "date"
                        }
                    },
                    {
                        "name": "user",
                        "in": "path",
                        "description": "User Id (if empty, will return all notifications)",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/notifications/events": {
            "get": {
                "tags": [
                    "Notifications"
                ],
                "summary": "Get list of events for which notifications exist",
                "description": "Get list of events for which notifications exist",
                "operationId": "9fb7a4e2774d876aa5a441f51f13b055",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/admin/notifications/events": {
            "get": {
                "tags": [
                    "Notifications Admin"
                ],
                "summary": "Get list of events for which notifications exist",
                "description": "Get list of events for which notifications exist",
                "operationId": "1897bdfd2176566f387ddd0acdff8264",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/notifications/{notification}/read": {
            "post": {
                "tags": [
                    "Notifications"
                ],
                "summary": "Mark notification as read",
                "description": "Mark notification as read",
                "operationId": "b6906081ef5348b09e3ab3f92f79a4ae",
                "parameters": [
                    {
                        "name": "notification",
                        "in": "path",
                        "description": "Notification uuid / id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/admin/pages": {
            "get": {
                "tags": [
                    "Pages"
                ],
                "summary": "Lists available pages",
                "responses": {
                    "200": {
                        "description": "list of available pages",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "map of pages identified by a slug value",
                                    "type": "object",
                                    "additionalProperties": {
                                        "$ref": "#/components/schemas/Page"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "endpoint requires authentication"
                    },
                    "403": {
                        "description": "user doesn't have required access rights"
                    },
                    "500": {
                        "description": "server-side error"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Pages"
                ],
                "summary": "Create a new page identified by id",
                "operationId": "4e70710033f0ceb8ac1b8c6aaf73732a",
                "requestBody": {
                    "description": "Page attributes",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Page"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "page created successfully"
                    },
                    "401": {
                        "description": "endpoint requires authentication"
                    },
                    "403": {
                        "description": "user doesn't have required access rights"
                    },
                    "409": {
                        "description": "there already is a page identified by chosen slug identifier"
                    },
                    "422": {
                        "description": "one of the parameters has invalid format"
                    },
                    "500": {
                        "description": "server-side error"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/admin/pages/{id}": {
            "get": {
                "tags": [
                    "Pages"
                ],
                "summary": "Read a page identified by a given id identifier",
                "operationId": "a3153fb9f6ebb1344421443708259588",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Unique human-readable page identifier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Page"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "endpoint requires authentication"
                    },
                    "403": {
                        "description": "user doesn't have required access rights"
                    },
                    "500": {
                        "description": "server-side error"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Pages"
                ],
                "summary": "Delete a page identified by a id",
                "operationId": "9a15c1b3253caad40df8c99562bda1ce",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Unique human-readable page identifier",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "page deleted successfully"
                    },
                    "401": {
                        "description": "endpoint requires authentication"
                    },
                    "403": {
                        "description": "user doesn't have required access rights"
                    },
                    "400": {
                        "description": "cannot find a page with provided slug identifier"
                    },
                    "500": {
                        "description": "server-side error"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Pages"
                ],
                "summary": "Update an existing page identified by id",
                "operationId": "830084b4fc07323e203589a6845b119c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Unique human-readable page identifier",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Page attributes",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Page"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "page updated successfully"
                    },
                    "401": {
                        "description": "endpoint requires authentication"
                    },
                    "403": {
                        "description": "user doesn't have required access rights"
                    },
                    "400": {
                        "description": "cannot find a page with provided slug identifier"
                    },
                    "422": {
                        "description": "one of the parameters has invalid format"
                    },
                    "500": {
                        "description": "server-side error"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/pages": {
            "get": {
                "tags": [
                    "Pages"
                ],
                "summary": "Lists available pages",
                "responses": {
                    "200": {
                        "description": "list of available pages",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "map of pages identified by a slug value",
                                    "type": "object",
                                    "additionalProperties": {
                                        "$ref": "#/components/schemas/Page"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "endpoint requires authentication"
                    },
                    "403": {
                        "description": "user doesn't have required access rights"
                    },
                    "500": {
                        "description": "server-side error"
                    }
                }
            }
        },
        "/api/pages/{slug}": {
            "get": {
                "tags": [
                    "Pages"
                ],
                "summary": "Read a page identified by a given slug identifier",
                "operationId": "061c46f274744c45aa5784f21b4417bd",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Unique human-readable page identifier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Page"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "endpoint requires authentication"
                    },
                    "403": {
                        "description": "user doesn't have required access rights"
                    },
                    "500": {
                        "description": "server-side error"
                    }
                }
            }
        },
        "/api/admin/payments": {
            "get": {
                "tags": [
                    "Admin Payments"
                ],
                "summary": "Search payments",
                "description": "Get filtered and paginated Payments",
                "operationId": "3def6e493e77fb7b93a9856973553e01",
                "parameters": [
                    {
                        "name": "order_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "created_at",
                                "updated_at",
                                "status",
                                "payable_id",
                                "user_id",
                                "amount",
                                "order_id",
                                "id"
                            ]
                        }
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "ASC",
                                "DESC"
                            ]
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Pagination Page Number",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "default": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Pagination Per Page",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "default": 15
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Payment status",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "new",
                                "paid",
                                "cancelled"
                            ]
                        }
                    },
                    {
                        "name": "order_id",
                        "in": "query",
                        "description": "External order id (e.g. from payment provider)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "payable_id",
                        "in": "query",
                        "description": "Id of payable (e.g. order model id)",
                        "required": false,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "payable_type",
                        "in": "query",
                        "description": "Full classname of payable model (eg. EscolaLms\\Cart\\Models\\Order)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "user_id",
                        "in": "query",
                        "description": "Id of user",
                        "required": false,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "date_from",
                        "in": "query",
                        "description": "Date from",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "date_to",
                        "in": "query",
                        "description": "Date to",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/admin/payments/{id}": {
            "get": {
                "tags": [
                    "Admin Payments"
                ],
                "summary": "Display the specified Payment",
                "description": "Get Payment",
                "operationId": "bb7bf9dbeefb2c260e33dd44452f4891",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Payment",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/payments": {
            "get": {
                "tags": [
                    "Payments"
                ],
                "summary": "Search payments",
                "description": "Get filtered and paginated Payments",
                "operationId": "607acc650e002580391a36165a6a0ad0",
                "parameters": [
                    {
                        "name": "order_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "created_at",
                                "updated_at",
                                "status",
                                "payable_id",
                                "user_id",
                                "amount",
                                "order_id",
                                "id"
                            ]
                        }
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "ASC",
                                "DESC"
                            ]
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Pagination Page Number",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "default": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Pagination Per Page",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "default": 15
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Payment status",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "new",
                                "paid",
                                "cancelled"
                            ]
                        }
                    },
                    {
                        "name": "order_id",
                        "in": "query",
                        "description": "External order id (e.g. from payment provider)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "payable_id",
                        "in": "query",
                        "description": "Id of payable (e.g. order id)",
                        "required": false,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "payable_type",
                        "in": "query",
                        "description": "Full classname of payable model (eg. EscolaLms\\Cart\\Models\\Order)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "date_from",
                        "in": "query",
                        "description": "Date from",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "date_to",
                        "in": "query",
                        "description": "Date to",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/payments/{id}": {
            "get": {
                "tags": [
                    "Payments"
                ],
                "summary": "Display the specified Payment",
                "description": "Get Payment",
                "operationId": "9a9358debbf57d654d40de34289144fc",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Payment",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/admin/roles": {
            "get": {
                "tags": [
                    "Admin Permissions"
                ],
                "summary": "Lists available roles",
                "operationId": "04785cedb441c10e294501e023d36a09",
                "responses": {
                    "200": {
                        "description": "list of available roles",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Roles",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Role"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "endpoint requires authentication"
                    },
                    "403": {
                        "description": "user doesn't have required access rights"
                    },
                    "500": {
                        "description": "server-side error"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Admin Permissions"
                ],
                "summary": "Find or Create a Role",
                "operationId": "b4aec7e5d6b5025dde40d775d0f0fe0c",
                "requestBody": {
                    "description": "Role attributes. Just name, rest are omitted",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Role"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Role created of found successfully"
                    },
                    "401": {
                        "description": "endpoint requires authentication"
                    },
                    "403": {
                        "description": "user doesn't have required access rights"
                    },
                    "422": {
                        "description": "one of the parameters has invalid format"
                    },
                    "500": {
                        "description": "server-side error"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/admin/roles/{name}": {
            "get": {
                "tags": [
                    "Admin Permissions"
                ],
                "summary": "Read a role and returns list of all permissions ",
                "operationId": "45d7c2575deef68348ecb1ffaed5ca94",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Unique human-readable template identifier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "list of available roles",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Permissions",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Permission"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "endpoint requires authentication"
                    },
                    "403": {
                        "description": "user doesn't have required access rights"
                    },
                    "500": {
                        "description": "server-side error"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Admin Permissions"
                ],
                "summary": "Delete a Role identified by a name",
                "operationId": "e6054e16c68404cfa52cdfbde74b20bc",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Unique human-readable role identifier",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "role deleted successfully"
                    },
                    "401": {
                        "description": "endpoint requires authentication"
                    },
                    "403": {
                        "description": "user doesn't have required access rights"
                    },
                    "400": {
                        "description": "cannot find a role with provided slug identifier"
                    },
                    "500": {
                        "description": "server-side error"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Admin Permissions"
                ],
                "summary": "Update an existing Role identified by name by list or new permissions",
                "operationId": "a7eb4bc58ccc39d51d8a4eb4a4e51a15",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Unique human-readable role identifier",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Array of named permissions",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "permissions": {
                                        "description": "Permissions",
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "role updated successfully"
                    },
                    "401": {
                        "description": "endpoint requires authentication"
                    },
                    "403": {
                        "description": "user doesn't have required access rights"
                    },
                    "400": {
                        "description": "cannot find a role with provided slug identifier"
                    },
                    "422": {
                        "description": "one of the parameters has invalid format"
                    },
                    "500": {
                        "description": "server-side error"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/admin/question": {
            "get": {
                "tags": [
                    "Question"
                ],
                "summary": "Lists available questions",
                "responses": {
                    "200": {
                        "description": "list of available questions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "map of questions",
                                    "type": "object",
                                    "additionalProperties": {
                                        "$ref": "#/components/schemas/Question"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "endpoint requires authentication"
                    },
                    "403": {
                        "description": "user doesn't have required access rights"
                    },
                    "500": {
                        "description": "server-side error"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Question"
                ],
                "summary": "Create a new question identified by id",
                "operationId": "5d6de858ff457c3341f17371272bd100",
                "requestBody": {
                    "description": "Question attributes",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Question"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Question created successfully"
                    },
                    "401": {
                        "description": "endpoint requires authentication"
                    },
                    "403": {
                        "description": "user doesn't have required access rights"
                    },
                    "422": {
                        "description": "one of the parameters has invalid format"
                    },
                    "500": {
                        "description": "server-side error"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/admin/question/{id}": {
            "get": {
                "tags": [
                    "Question"
                ],
                "summary": "Read a question identified by a given id identifier",
                "operationId": "d2abdb911c61b446dfac0f30d3a8adc0",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Unique human-readable question identifier",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Question"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "endpoint requires authentication"
                    },
                    "403": {
                        "description": "user doesn't have required access rights"
                    },
                    "500": {
                        "description": "server-side error"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Question"
                ],
                "summary": "Delete a question identified by a id",
                "operationId": "333dcd1754de605d8076219ba7c0fbc8",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Unique human-readable question identifier",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Question deleted successfully"
                    },
                    "401": {
                        "description": "endpoint requires authentication"
                    },
                    "403": {
                        "description": "user doesn't have required access rights"
                    },
                    "400": {
                        "description": "cannot find a question"
                    },
                    "500": {
                        "description": "server-side error"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Question"
                ],
                "summary": "Update an existing question identified by id",
                "operationId": "8b003572eb06bef749152d5d3a1a0d37",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Unique human-readable question identifier",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Question attributes",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Question"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Question updated successfully"
                    },
                    "401": {
                        "description": "endpoint requires authentication"
                    },
                    "403": {
                        "description": "user doesn't have required access rights"
                    },
                    "400": {
                        "description": "cannot find a question with provided slug identifier"
                    },
                    "422": {
                        "description": "one of the parameters has invalid format"
                    },
                    "500": {
                        "description": "server-side error"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/admin/question-answers/{id}": {
            "get": {
                "tags": [
                    "QuestionAnswersForQuestionaire"
                ],
                "summary": "Lists questions answers for questionaire",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of questionnaire",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "questionnaire_model_id",
                        "in": "query",
                        "description": "id of questionnaire model",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "question_id",
                        "in": "query",
                        "description": "id of question",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lists questions answers for questionaire",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "map of questions",
                                    "type": "object",
                                    "additionalProperties": {
                                        "$ref": "#/components/schemas/QuestionAnswer"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "endpoint requires authentication"
                    },
                    "403": {
                        "description": "user doesn't have required access rights"
                    },
                    "500": {
                        "description": "server-side error"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/admin/questionnaire": {
            "get": {
                "tags": [
                    "Questionnaire"
                ],
                "summary": "Lists available questionnaires",
                "responses": {
                    "200": {
                        "description": "list of available questionnaires",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "map of questionnaires",
                                    "type": "object",
                                    "additionalProperties": {
                                        "$ref": "#/components/schemas/Questionnaire"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "endpoint requires authentication"
                    },
                    "403": {
                        "description": "user doesn't have required access rights"
                    },
                    "500": {
                        "description": "server-side error"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Questionnaire"
                ],
                "summary": "Create a new questionnaire",
                "operationId": "f6a1ee410a9addfeee0f10a1467e8fee",
                "requestBody": {
                    "description": "Questionnaire attributes",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Questionnaire"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Questionnaire created successfully"
                    },
                    "401": {
                        "description": "endpoint requires authentication"
                    },
                    "403": {
                        "description": "user doesn't have required access rights"
                    },
                    "409": {
                        "description": "there already is a questionnaire"
                    },
                    "422": {
                        "description": "one of the parameters has invalid format"
                    },
                    "500": {
                        "description": "server-side error"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/admin/questionnaire/{id}": {
            "get": {
                "tags": [
                    "Questionnaire"
                ],
                "summary": "Read a questionnaire identified by a given id identifier",
                "operationId": "46e033acc673540421a2d59c527c0da1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Unique human-readable questionnaire identifier",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Questionnaire"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "endpoint requires authentication"
                    },
                    "403": {
                        "description": "user doesn't have required access rights"
                    },
                    "500": {
                        "description": "server-side error"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Questionnaire"
                ],
                "summary": "Delete a questionnaire identified by a id",
                "operationId": "62d1d40e88ba59337c0eb62ef2360812",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Unique human-readable questionnaire identifier",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Questionnaire deleted successfully"
                    },
                    "401": {
                        "description": "endpoint requires authentication"
                    },
                    "403": {
                        "description": "user doesn't have required access rights"
                    },
                    "400": {
                        "description": "cannot find a questionnaire"
                    },
                    "500": {
                        "description": "server-side error"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Questionnaire"
                ],
                "summary": "Update an existing questionnaire identified by id",
                "operationId": "70a144ebe94b203ec721362ca378628a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Unique human-readable questionnaire identifier",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Questionnaire attributes",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Questionnaire"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Questionnaire updated successfully"
                    },
                    "401": {
                        "description": "endpoint requires authentication"
                    },
                    "403": {
                        "description": "user doesn't have required access rights"
                    },
                    "400": {
                        "description": "cannot find a questionnaire"
                    },
                    "422": {
                        "description": "one of the parameters has invalid format"
                    },
                    "500": {
                        "description": "server-side error"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/admin/questionnaire-model": {
            "get": {
                "tags": [
                    "QuestionnaireModelType"
                ],
                "summary": "Lists available questionnaire model type",
                "operationId": "0e104005f43b47981e5445763a148f12",
                "responses": {
                    "200": {
                        "description": "list of available questionnaire model type",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "map of questionnaire model type",
                                    "type": "object",
                                    "additionalProperties": {
                                        "$ref": "#/components/schemas/QuestionnaireModelType"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "endpoint requires authentication"
                    },
                    "403": {
                        "description": "user doesn't have required access rights"
                    },
                    "500": {
                        "description": "server-side error"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/admin/questionnaire/report/{id}": {
            "get": {
                "tags": [
                    "QuestionnaireReport"
                ],
                "summary": "Read a questionnaire report identified by a given id identifier",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "questionnaire identifier",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/QuestionnaireReportResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "endpoint requires authentication"
                    },
                    "403": {
                        "description": "user doesn't have required access rights"
                    },
                    "500": {
                        "description": "server-side error"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/admin/questionnaire/report/{id}/{model_type_id}": {
            "get": {
                "tags": [
                    "QuestionnaireReportForModelType"
                ],
                "summary": "Read a questionnaire report identified by a given id identifier and model type",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "questionnaire identifier",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "model_type_id",
                        "in": "path",
                        "description": "questionnaire model type identified",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/QuestionnaireReportResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "endpoint requires authentication"
                    },
                    "403": {
                        "description": "user doesn't have required access rights"
                    },
                    "500": {
                        "description": "server-side error"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/admin/questionnaire/report/{id}/{model_type_id}/{model_id}": {
            "get": {
                "tags": [
                    "QuestionnaireReportForModel"
                ],
                "summary": "Read a questionnaire report identified by a given id identifier and model type and model identified",
                "operationId": "f50bad71421f33cc37add13d1f08f3ef",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "questionnaire identifier",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "model_type_id",
                        "in": "path",
                        "description": "questionnaire model type identified",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "model_id",
                        "in": "path",
                        "description": "model identifier",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/QuestionnaireReportResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "endpoint requires authentication"
                    },
                    "403": {
                        "description": "user doesn't have required access rights"
                    },
                    "500": {
                        "description": "server-side error"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/admin/questionnaire/assign/{model_type_title}/{model_id}/{id}": {
            "patch": {
                "tags": [
                    "Questionnaire"
                ],
                "summary": "assign a questionnaire model",
                "operationId": "073fab3ba15a1049488dfcc8cb28bd24",
                "parameters": [
                    {
                        "name": "model_type_title",
                        "in": "path",
                        "description": "Name of Model (Course, Webinar etd.)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "model_id",
                        "in": "path",
                        "description": "id of Model (Course, Webinar etd.)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of questionnaire",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Questionnaire model assign successfully"
                    },
                    "401": {
                        "description": "endpoint requires authentication"
                    },
                    "403": {
                        "description": "user doesn't have required access rights"
                    },
                    "400": {
                        "description": "cannot find a questionnaire"
                    },
                    "500": {
                        "description": "server-side error"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/admin/questionnaire/unassign/{model_type_title}/{model_id}/{id}": {
            "delete": {
                "tags": [
                    "Questionnaire"
                ],
                "summary": "unassign a questionnaire model",
                "operationId": "c8edc4a3e2950aa9c718bdbf4ac15506",
                "parameters": [
                    {
                        "name": "model_type_title",
                        "in": "path",
                        "description": "Name of Model (Course, Webinar etd.)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "model_id",
                        "in": "path",
                        "description": "id of Model (Course, Webinar etd.)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of questionnaire",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Questionnaire model unassign successfully"
                    },
                    "401": {
                        "description": "endpoint requires authentication"
                    },
                    "403": {
                        "description": "user doesn't have required access rights"
                    },
                    "400": {
                        "description": "cannot find a questionnaire"
                    },
                    "500": {
                        "description": "server-side error"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/questionnaire/{model_type_title}/{model_id}": {
            "get": {
                "tags": [
                    "Questionnaire"
                ],
                "summary": "Lists available questionnaires",
                "parameters": [
                    {
                        "name": "model_type_title",
                        "in": "path",
                        "description": "Name of Model (Course, Webinar etd.)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "model_id",
                        "in": "path",
                        "description": "id of Model (Course, Webinar etd.)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "list of available questionnaires",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "map of questionnaires",
                                    "type": "object",
                                    "additionalProperties": {
                                        "$ref": "#/components/schemas/Questionnaire"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "endpoint requires authentication"
                    },
                    "403": {
                        "description": "user doesn't have required access rights"
                    },
                    "500": {
                        "description": "server-side error"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/questionnaire/{model_type_title}/{model_id}/{id}": {
            "get": {
                "tags": [
                    "Questionnaire"
                ],
                "summary": "Read a questionnaire identified by a given id identifier and model",
                "operationId": "34f01b468bf00949bea99a1cc24769c4",
                "parameters": [
                    {
                        "name": "model_type_title",
                        "in": "path",
                        "description": "Name of Model (Course, Webinar etd.)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "model_id",
                        "in": "path",
                        "description": "id of Model (Course, Webinar etd.)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Questionnaire",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Questionnaire"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "endpoint requires authentication"
                    },
                    "403": {
                        "description": "user doesn't have required access rights"
                    },
                    "500": {
                        "description": "server-side error"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Questionnaire"
                ],
                "summary": "Save a questionnaire answers",
                "operationId": "e213b156195202d75bcea0077d6e88d3",
                "parameters": [
                    {
                        "name": "model_type_title",
                        "in": "path",
                        "description": "Name of Model (Course, Webinar etd.)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "model_id",
                        "in": "path",
                        "description": "id of Model (Course, Webinar etd.)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of questionnaire",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Answer attributes",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/QuestionnaireAnswerRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Questionnaire"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "endpoint requires authentication"
                    },
                    "403": {
                        "description": "user doesn't have required access rights"
                    },
                    "500": {
                        "description": "server-side error"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/questionnaire/stars/{model_type_title}/{model_id}": {
            "get": {
                "tags": [
                    "QuestionnaireStars"
                ],
                "summary": "Read a questionnaire stars identified by a given model title and model id identifier",
                "operationId": "000d633e3d443742474a090e856c981a",
                "parameters": [
                    {
                        "name": "model_type_title",
                        "in": "path",
                        "description": "Name of Model (Course, Webinar etd.)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "model_id",
                        "in": "path",
                        "description": "id of Model (Course, Webinar etd.)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/QuestionnaireStarsResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "endpoint requires authentication"
                    },
                    "403": {
                        "description": "user doesn't have required access rights"
                    },
                    "500": {
                        "description": "server-side error"
                    }
                }
            }
        },
        "/api/admin/reports/metrics": {
            "get": {
                "tags": [
                    "Admin Reports"
                ],
                "summary": "Get list of available metrics",
                "description": "",
                "operationId": "01654091932139219ab43cdb13aedce3",
                "responses": {
                    "200": {
                        "description": "successful operation, returns User data",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/admin/reports/report": {
            "get": {
                "tags": [
                    "Admin Reports"
                ],
                "summary": "Get list of available metrics",
                "description": "",
                "operationId": "fa6fc53a1eb222a4059599186448c833",
                "parameters": [
                    {
                        "name": "metric",
                        "in": "query",
                        "description": "one of available metrics",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "date",
                        "in": "query",
                        "description": "date from which report should be loaded (if there exists historical data), limit will be ignored and only datapoints with which record was created will be loaded; don't send this param to always get fresh report; send today date if you want to get latest stored report",
                        "required": false,
                        "schema": {
                            "type": "datetime"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "how many datapoints should be returned",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation, returns User data",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/admin/stats/available": {
            "get": {
                "tags": [
                    "Admin Reports"
                ],
                "summary": "Get list of available stats for models",
                "description": "",
                "operationId": "e308b71a486a2b5f0a3095b3da624e62",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/admin/stats/course/{course_id}": {
            "get": {
                "tags": [
                    "Admin Reports"
                ],
                "summary": "Calculate stats for Course",
                "description": "",
                "operationId": "1e44b77b5db605f25416e55457c6d01c",
                "parameters": [
                    {
                        "name": "course_id",
                        "in": "path",
                        "description": "Course ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "stats",
                        "in": "query",
                        "description": "array of stats to be calculated, leave empty to calculate all available stats",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {}
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/admin/scorm/upload": {
            "post": {
                "tags": [
                    "SCORM"
                ],
                "summary": "Convert ZIP Scorm Package into Escola LMS Scorm storage",
                "operationId": "4199721991f4a0f4459f74ddc08289ed",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "zip": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "scorm data"
                    },
                    "401": {
                        "description": "endpoint requires authentication"
                    },
                    "403": {
                        "description": "user doesn't have required access rights"
                    },
                    "500": {
                        "description": "server-side error"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/admin/scorm/parse": {
            "post": {
                "tags": [
                    "SCORM"
                ],
                "summary": "Parse ZIP Scorm to see if it's valid",
                "operationId": "5f53aead1775594188d8b4b1b56e9099",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "zip": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "scorm data"
                    },
                    "401": {
                        "description": "endpoint requires authentication"
                    },
                    "403": {
                        "description": "user doesn't have required access rights"
                    },
                    "500": {
                        "description": "server-side error"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/scorm/play/{uuid}": {
            "get": {
                "tags": [
                    "SCORM"
                ],
                "summary": "Read a page identified by a given slug identifier",
                "operationId": "b710a23d97ea51e952083b667df0db2e",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "Unique uuid scorm identifier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "401": {
                        "description": "endpoint requires authentication"
                    },
                    "403": {
                        "description": "user doesn't have required access rights"
                    },
                    "500": {
                        "description": "server-side error"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/admin/scorm/": {
            "get": {
                "tags": [
                    "SCORM"
                ],
                "summary": "Read a page identified by a given slug identifier",
                "operationId": "45fc6965239025d98ad1d6ae0112d2f6",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "page",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "per_page",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "401": {
                        "description": "endpoint requires authentication"
                    },
                    "403": {
                        "description": "user doesn't have required access rights"
                    },
                    "500": {
                        "description": "server-side error"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/admin/scorm/scos": {
            "get": {
                "tags": [
                    "SCORM"
                ],
                "summary": "Get all scos",
                "operationId": "322dc226ea257035a3c1b09a07222c43",
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "401": {
                        "description": "endpoint requires authentication"
                    },
                    "403": {
                        "description": "user doesn't have required access rights"
                    },
                    "500": {
                        "description": "server-side error"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/admin/scorm/{scorm_id}": {
            "delete": {
                "tags": [
                    "SCORM"
                ],
                "summary": "Delete scorm package by id",
                "operationId": "9071dc5be32921c5bf43043a3a1ee415",
                "parameters": [
                    {
                        "name": "scorm_id",
                        "in": "path",
                        "description": "Scorm package id",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "401": {
                        "description": "endpoint requires authentication"
                    },
                    "403": {
                        "description": "user doesn't have required access rights"
                    },
                    "500": {
                        "description": "server-side error"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/scorm/track/{uuid}": {
            "post": {
                "tags": [
                    "SCORM"
                ],
                "summary": "Track Scorm user progress",
                "operationId": "a4529c50341778b746c279953c1bf56c",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "Unique uuid scorm identifier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "scorm data"
                    },
                    "401": {
                        "description": "endpoint requires authentication"
                    },
                    "403": {
                        "description": "user doesn't have required access rights"
                    },
                    "500": {
                        "description": "server-side error"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/scorm/track/{scoId}/{key}": {
            "get": {
                "tags": [
                    "SCORM"
                ],
                "summary": "Get user progress by scorm sco id and scorm data key",
                "operationId": "14617a0fe34eda208dc8c0de4ba2a29f",
                "parameters": [
                    {
                        "name": "sco_id",
                        "in": "path",
                        "description": "Unique scorm identifier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "path",
                        "description": "Unique scorm data key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "401": {
                        "description": "endpoint requires authentication"
                    },
                    "403": {
                        "description": "user doesn't have required access rights"
                    },
                    "500": {
                        "description": "server-side error"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/admin/config": {
            "get": {
                "tags": [
                    "Admin Settings"
                ],
                "summary": "Get admin config",
                "description": "Get a listing of registered config keys",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Admin Settings"
                ],
                "summary": "Set config for registered config keys",
                "operationId": "e4b582c031121b9188d65e35da218c7a",
                "requestBody": {},
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/admin/settings": {
            "get": {
                "tags": [
                    "Admin Settings"
                ],
                "description": "Get Settings paginated",
                "operationId": "6f0b2a1153a6feccc10053127b272b18",
                "parameters": [
                    {
                        "name": "group",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Pagination Page Number",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "default": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Pagination Per Page",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "422": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Admin Settings"
                ],
                "summary": "Settings create",
                "description": "Create single setting",
                "operationId": "051f96e67ccbcb2ea4f9e74f945a9988",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "422": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/admin/settings/{id}": {
            "get": {
                "tags": [
                    "Admin Settings"
                ],
                "description": "Get single settings",
                "operationId": "c745b6bd9a9e0afb1c40d355d254d60a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "422": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Admin Settings"
                ],
                "summary": "Update setting",
                "description": "Update single setting",
                "operationId": "69f83d57a47d5122b198ffc4b1148230",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "422": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Admin Settings"
                ],
                "summary": "Destroy setting",
                "description": "Destroy the specified setting",
                "operationId": "e5c3fa54a4d9d826ea45a5e2295d5714",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "422": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/admin/settings/groups": {
            "get": {
                "tags": [
                    "Admin Settings"
                ],
                "description": "Get Settings unique groups",
                "operationId": "979511ea3a7548b329a684a5e304b0bd",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "422": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/config": {
            "get": {
                "tags": [
                    "Settings"
                ],
                "summary": "Get a listing of public config values.",
                "description": "Get public config values",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/api/settings": {
            "get": {
                "tags": [
                    "Settings"
                ],
                "summary": "Get a listing of the public and enuerable settings.",
                "description": "Get settings",
                "operationId": "304a6c4c57f2a00529fa6a29cd7aa385",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/api/settings/{group}/{key}": {
            "get": {
                "tags": [
                    "Settings"
                ],
                "summary": "Display the specified public setting",
                "description": "Get Course",
                "operationId": "13c48e51211e7e16517dee7248fa9d04",
                "parameters": [
                    {
                        "name": "group",
                        "in": "path",
                        "description": "group of setting",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "path",
                        "description": "key of setting",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/admin/stationary-events": {
            "get": {
                "tags": [
                    "Admin Stationary Events"
                ],
                "summary": "Get a listing of the Stationary events",
                "description": "Get all Stationary Events",
                "operationId": "d6f51e48f360e27bb74d6da2a8da3943",
                "parameters": [
                    {
                        "name": "order_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "finished_at",
                                "started_at",
                                "created_at",
                                "name"
                            ]
                        }
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "ASC",
                                "DESC"
                            ]
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Pagination Page Number",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "default": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Pagination Per Page",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "default": 15
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Stationary event name %LIKE%",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Admin Stationary Events"
                ],
                "summary": "Store a newly created Stationary event in storage",
                "description": "Store Stationary Event",
                "operationId": "dae18b20fcabf0d3d80d32a95463b0fb",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/stationary-event-create-request"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/admin/stationary-events/{id}": {
            "get": {
                "tags": [
                    "Admin Stationary Events"
                ],
                "summary": "Display the specified Stationary Event",
                "description": "Get Stationary Event",
                "operationId": "3f819ea5b4a2a48a1ac9f925c6cfd3b3",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Stationary event",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Admin Stationary Events"
                ],
                "summary": "Update the specified Stationary Event in storage",
                "description": "Update Stationary Events",
                "operationId": "c0e6b017e6963fa6aae34aedfbc74e2b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Stationary Events",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/stationary-event-update-request"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Admin Stationary Events"
                ],
                "summary": "Remove the specified Stationary Event from storage",
                "description": "Delete Stationary Event",
                "operationId": "051247585adc9f3f9717f410e37bd46c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Stationary Event",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/stationary-events": {
            "get": {
                "tags": [
                    "Stationary Events"
                ],
                "summary": "Get a listing of the active Stationary events",
                "description": "Get all active Stationary Events",
                "operationId": "8e48dcafb3bc43749212c24ae7e5b842",
                "parameters": [
                    {
                        "name": "order_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "finished_at",
                                "started_at",
                                "created_at",
                                "name"
                            ]
                        }
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "ASC",
                                "DESC"
                            ]
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Pagination Page Number",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "default": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Pagination Per Page",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "default": 15
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Stationary event name %LIKE%",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/api/stationary-events/{id}": {
            "get": {
                "tags": [
                    "Stationary Events"
                ],
                "summary": "Display the specified Stationary Event",
                "description": "Get Stationary Event",
                "operationId": "0691e9d4f2cbb162f7b42ec14891633a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Stationary event",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/api/tags": {
            "get": {
                "tags": [
                    "Tags"
                ],
                "description": "Display a listing of the Tag",
                "operationId": "d235db266477badd488a71b57495bf3a",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "422": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/api/tags/unique": {
            "get": {
                "tags": [
                    "Tags"
                ],
                "description": "Display the unique Tags",
                "operationId": "15af86154a4bd49f49fb7fe9d8cd256a",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "422": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/api/admin/tags/create": {
            "post": {
                "tags": [
                    "Tags"
                ],
                "description": "Create multiple Tags",
                "operationId": "f082a7f006adcb8c7982a77879ee9dd1",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "model_type": {
                                        "type": "string",
                                        "example": "Category"
                                    },
                                    "model_id": {
                                        "type": "integer",
                                        "example": "1"
                                    },
                                    "tags": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "title": {
                                                                "type": "string",
                                                                "example": "Nowości"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "422": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/api/admin/tags": {
            "delete": {
                "tags": [
                    "Tags"
                ],
                "summary": "Destroy Tags",
                "description": "Destroy Tags",
                "operationId": "b6eeda4a51a064e937339664464e4868",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "tags": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "": {
                                                    "type": "integer",
                                                    "example": "1"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "422": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/admin/tags/{tag}": {
            "get": {
                "tags": [
                    "Tags"
                ],
                "description": "Display the specified Tag",
                "operationId": "09c1c7584c8f9fa722d64a7a7d6f58a2",
                "parameters": [
                    {
                        "name": "tag",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/pdfs": {
            "get": {
                "tags": [
                    "Template PDFs"
                ],
                "summary": "Get Fabric.js PDFs",
                "description": "Get paginated list of PDFs generated by templates",
                "operationId": "06df18a9b95af2c91fdae6c036de0812",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Pagination Page Number",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "default": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Pagination Per Page",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/pdfs/{id}": {
            "get": {
                "tags": [
                    "Template PDFs"
                ],
                "summary": "Display the specified Fabric.js PDF",
                "description": "Get Fabric.js PDF",
                "operationId": "89ad622d4231aebffbda04d5fcc47b84",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Fabric.js PDF",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/admin/pdfs": {
            "get": {
                "tags": [
                    "Admin Template PDFs"
                ],
                "summary": "Display the specified Fabric.js PDF",
                "description": "Get Fabric.js PDF, IF user_id or template_id is provided all records are returned, otherwise list is paginated ",
                "operationId": "d946803526c066605aab47bed62ea091",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "query",
                        "description": "either user_id",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "template_id",
                        "in": "query",
                        "description": "or user_id",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/admin/events/trigger-manually": {
            "post": {
                "tags": [
                    "Templates"
                ],
                "summary": "Manually triggered event for users",
                "operationId": "5961633c4b68b84902f136d042e22d02",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "users": {
                                        "description": "Ids of users",
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Event dispatched successfully"
                    },
                    "401": {
                        "description": "endpoint requires authentication"
                    },
                    "403": {
                        "description": "user doesn't have required access rights"
                    },
                    "422": {
                        "description": "one of the parameters has invalid format"
                    },
                    "500": {
                        "description": "server-side error"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/admin/templates": {
            "get": {
                "tags": [
                    "Templates"
                ],
                "summary": "Lists available templates",
                "parameters": [
                    {
                        "name": "channel",
                        "in": "query",
                        "description": "Channel class for filtering",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "event",
                        "in": "query",
                        "description": "Event class for filtering",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "list of available templates",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "map of templates identified by a slug value",
                                    "type": "object",
                                    "additionalProperties": {
                                        "$ref": "#/components/schemas/Template"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "endpoint requires authentication"
                    },
                    "403": {
                        "description": "user doesn't have required access rights"
                    },
                    "500": {
                        "description": "server-side error"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Templates"
                ],
                "summary": "Create a new template identified by id",
                "operationId": "3fcbce98e166986cebf1387efbcfed60",
                "requestBody": {
                    "description": "Template attributes",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Template"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "template created successfully"
                    },
                    "401": {
                        "description": "endpoint requires authentication"
                    },
                    "403": {
                        "description": "user doesn't have required access rights"
                    },
                    "409": {
                        "description": "there already is a template identified by chosen slug identifier"
                    },
                    "422": {
                        "description": "one of the parameters has invalid format"
                    },
                    "500": {
                        "description": "server-side error"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/admin/templates/{id}": {
            "get": {
                "tags": [
                    "Templates"
                ],
                "summary": "Read a template identified by a given id identifier",
                "operationId": "7a57d4b510fa4d422aa7d794d1ef1bf7",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Unique human-readable template identifier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Template"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "endpoint requires authentication"
                    },
                    "403": {
                        "description": "user doesn't have required access rights"
                    },
                    "500": {
                        "description": "server-side error"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Templates"
                ],
                "summary": "Delete a template identified by a id",
                "operationId": "0f1c4fb43ff4fa474da332c549337c81",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Unique human-readable template identifier",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "template deleted successfully"
                    },
                    "401": {
                        "description": "endpoint requires authentication"
                    },
                    "403": {
                        "description": "user doesn't have required access rights"
                    },
                    "400": {
                        "description": "cannot find a template with provided slug identifier"
                    },
                    "500": {
                        "description": "server-side error"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Templates"
                ],
                "summary": "Update an existing template identified by id",
                "operationId": "af7fd0165d35394f74b48a1375cb6803",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Unique human-readable template identifier",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Template attributes",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Template"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "template updated successfully"
                    },
                    "401": {
                        "description": "endpoint requires authentication"
                    },
                    "403": {
                        "description": "user doesn't have required access rights"
                    },
                    "400": {
                        "description": "cannot find a template with provided slug identifier"
                    },
                    "422": {
                        "description": "one of the parameters has invalid format"
                    },
                    "500": {
                        "description": "server-side error"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/admin/templates/variables": {
            "get": {
                "tags": [
                    "Templates"
                ],
                "summary": "Dictionary list of available template variables",
                "operationId": "a0b16c5525eef0a63f2f153b42a03732",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Unique human-readable template identifier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "401": {
                        "description": "endpoint requires authentication"
                    },
                    "403": {
                        "description": "user doesn't have required access rights"
                    },
                    "500": {
                        "description": "server-side error"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/admin/templates/{id}/preview": {
            "get": {
                "tags": [
                    "Templates"
                ],
                "summary": "Read a template identified by a given id identifier",
                "operationId": "f9f62befd9643bf4ff796d28f7207587",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Unique human-readable template identifier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Preview details"
                    },
                    "401": {
                        "description": "endpoint requires authentication"
                    },
                    "403": {
                        "description": "user doesn't have required access rights"
                    },
                    "500": {
                        "description": "server-side error"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/admin/templates/{id}/assign": {
            "post": {
                "tags": [
                    "Templates"
                ],
                "summary": "Assign template to model (of class assignable to the Variable Set)",
                "operationId": "a6f1b7ea3b3fabcde697eae06b4900d0",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Unique id of template",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "assignable_id": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Preview details"
                    },
                    "401": {
                        "description": "endpoint requires authentication"
                    },
                    "403": {
                        "description": "user doesn't have required access rights"
                    },
                    "500": {
                        "description": "server-side error"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/admin/templates/{id}/unassign": {
            "post": {
                "tags": [
                    "Templates"
                ],
                "summary": "Remove template assignment to model",
                "operationId": "e63e398250c6a0af5924f021455ee496",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Unique id of template",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "assignable_id": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Preview details"
                    },
                    "401": {
                        "description": "endpoint requires authentication"
                    },
                    "403": {
                        "description": "user doesn't have required access rights"
                    },
                    "500": {
                        "description": "server-side error"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/admin/templates/assignable": {
            "get": {
                "tags": [
                    "Templates"
                ],
                "summary": "Get Templates that can be assigned to model",
                "operationId": "a98364b5f0b7ab375c101171aee1263f",
                "parameters": [
                    {
                        "name": "assignable_class",
                        "in": "query",
                        "description": "Class of assignable model for which we want to find assignable Templates",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "channel",
                        "in": "query",
                        "description": "Class of channel for which we want to find assignable Templates",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "event",
                        "in": "query",
                        "description": "Class of event for which we want to find assignable Templates",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Templates that can be assigned"
                    },
                    "401": {
                        "description": "endpoint requires authentication"
                    },
                    "403": {
                        "description": "user doesn't have required access rights"
                    },
                    "500": {
                        "description": "server-side error"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/admin/templates/assigned": {
            "get": {
                "tags": [
                    "Templates"
                ],
                "summary": "Get Template assigned to the model",
                "operationId": "9394fa4c5c182a26f831c8567614a6da",
                "parameters": [
                    {
                        "name": "assignable_class",
                        "in": "query",
                        "description": "Class of assignable model for which we want to fetch assigned Template",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "assignable_id",
                        "in": "query",
                        "description": "Id of assignable model for which we want to fetch assigned Template",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Preview details"
                    },
                    "401": {
                        "description": "endpoint requires authentication"
                    },
                    "403": {
                        "description": "user doesn't have required access rights"
                    },
                    "500": {
                        "description": "server-side error"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/admin/tracks/routes": {
            "get": {
                "tags": [
                    "Tracker"
                ],
                "summary": "Lists available tracked routes",
                "operationId": "994c6b5bc1950a2ba1d86f29d8f35d13",
                "parameters": [
                    {
                        "name": "order_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "created_at",
                                "id"
                            ]
                        }
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "ASC",
                                "DESC"
                            ]
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Pagination Page Number",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "default": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Pagination Per Page",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "default": 15
                        }
                    },
                    {
                        "name": "user_id",
                        "in": "query",
                        "description": "Id of User",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "path",
                        "in": "query",
                        "description": "Route path",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "description": "Http method",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "date_from",
                        "in": "query",
                        "description": "Date from",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "date_to",
                        "in": "query",
                        "description": "Date to",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of available"
                    },
                    "401": {
                        "description": "Endpoint requires authentication"
                    },
                    "403": {
                        "description": "User doesn't have required access rights"
                    },
                    "500": {
                        "description": "Server-side error"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/admin/vouchers": {
            "get": {
                "tags": [
                    "Admin Vouchers"
                ],
                "summary": "Get a listing of the Vouchers.",
                "description": "Get all Vouchers",
                "operationId": "511590dc333f9fda82f26bea4d5dbca9",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Pagination Page Number",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "default": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Pagination Per Page",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Admin Vouchers"
                ],
                "summary": "Create Voucher",
                "description": "Create Voucher",
                "operationId": "8a3208dd5811fd4ba0de7cf9abe55cb6",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Coupon"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Coupon"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/admin/vouchers/{id}": {
            "get": {
                "tags": [
                    "Admin Vouchers"
                ],
                "summary": "Read Voucher",
                "description": "Read Voucher",
                "operationId": "9d9172b5aa060f0bbcd416abf6b8db6d",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Voucher",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Admin Vouchers"
                ],
                "summary": "Delete Voucher",
                "description": "Delete Voucher",
                "operationId": "766b6c9b8f8b4033ce9de1cd700f275d",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Voucher",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Admin Vouchers"
                ],
                "summary": "Update Voucher",
                "description": "Update Voucher",
                "operationId": "6173fa179c9685a4edfb31e34076758f",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Voucher",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Coupon"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Coupon"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/cart/voucher": {
            "post": {
                "tags": [
                    "Cart",
                    "Vouchers"
                ],
                "summary": "Add Voucher Code to your Cart",
                "description": "Add Voucher Code to your Cart",
                "operationId": "d860e758c960df46dd284a3d20cc8234",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "code": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "multipart/json": {
                            "schema": {
                                "properties": {
                                    "code": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/webinars/generate-jitsi/{id}": {
            "get": {
                "tags": [
                    "Webinars"
                ],
                "description": "Generate jitsi object for approved webinar",
                "operationId": "56afefe70e0e4baea58a7780d4b050dc",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/webinars": {
            "get": {
                "tags": [
                    "Webinars"
                ],
                "summary": "Get a listing of the Webinars.",
                "description": "Get all Webinars",
                "operationId": "6f079fc715b7ddc751392a031c8d262d",
                "parameters": [
                    {
                        "name": "order_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "finished_at",
                                "started_at",
                                "created_at",
                                "name",
                                "base_price"
                            ]
                        }
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "ASC",
                                "DESC"
                            ]
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Pagination Page Number",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "default": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Pagination Per Page",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "default": 15
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Webinar name %LIKE%",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "base_price",
                        "in": "query",
                        "description": "Webinar base_price >= ",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Webinar status == ",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/api/webinars/{id}": {
            "get": {
                "tags": [
                    "Webinars"
                ],
                "summary": "Display the specified Webinar",
                "description": "Get Webinar",
                "operationId": "dcd618c6fb9e5118817610403961df59",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Webinar",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/api/webinars/me": {
            "get": {
                "tags": [
                    "Webinars"
                ],
                "summary": "Get a listing of the Webinars bought by user.",
                "description": "Get a listing of the Webinars bought by user",
                "operationId": "95c43d3479883709f820247bff70e688",
                "parameters": [
                    {
                        "name": "order_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "finished_at",
                                "started_at",
                                "created_at",
                                "name",
                                "base_price"
                            ]
                        }
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "ASC",
                                "DESC"
                            ]
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Pagination Page Number",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "default": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Pagination Per Page",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "default": 15
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Webinar name %LIKE%",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "base_price",
                        "in": "query",
                        "description": "Webinar base_price >= ",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Webinar status == ",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/admin/webinars": {
            "get": {
                "tags": [
                    "Admin Webinars"
                ],
                "operationId": "a4cc4150753c66e5796d977b9c247bcb",
                "parameters": [
                    {
                        "name": "order_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "finished_at",
                                "started_at",
                                "created_at",
                                "name",
                                "base_price"
                            ]
                        }
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "ASC",
                                "DESC"
                            ]
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Pagination Page Number",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "default": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Pagination Per Page",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "default": 15
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Webinar name %LIKE%",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "base_price",
                        "in": "query",
                        "description": "Webinar base_price >= ",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Webinar status == ",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Admin Webinars"
                ],
                "summary": "Store a newly created Webinar in storage",
                "description": "Store Webinar",
                "operationId": "f55c76d976ee46b2f98f9e6825ea79e1",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Webinar"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/admin/webinars/{id}": {
            "get": {
                "tags": [
                    "Admin Webinars"
                ],
                "summary": "Display the specified Webinar",
                "description": "Get Webinars",
                "operationId": "bc00db689b509bf2da3d42089e1f3e39",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Webinar",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Admin Webinars"
                ],
                "summary": "Update the specified Webinar in storage",
                "description": "Update Webinar",
                "operationId": "b5d9d10f162ca3e879e75c15fd575b1b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Webinar",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Webinar"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Admin Webinars"
                ],
                "summary": "Remove the specified Webinar from storage",
                "description": "Delete Webinar",
                "operationId": "4b5c901bcbc8c4b287afb20fbd600c4e",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Webinar",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "UserSubmission": {
                "properties": {
                    "id": {
                        "description": "user submission id",
                        "type": "integer"
                    },
                    "email": {
                        "description": "user email",
                        "type": "string"
                    },
                    "status": {
                        "description": "status",
                        "type": "string"
                    },
                    "morphable_id": {
                        "description": "morph id",
                        "type": "integer"
                    },
                    "morphable_type": {
                        "description": "morph type",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "UserAvatar": {
                "properties": {
                    "avatar": {
                        "description": "avatar",
                        "type": "file",
                        "format": "binary"
                    }
                },
                "type": "object"
            },
            "Group": {
                "title": "Group",
                "description": "Group model",
                "required": [],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string"
                    },
                    "parent_id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "registerable": {
                        "type": "boolean"
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/User"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Group"
                }
            },
            "User": {
                "title": "User",
                "description": "User model",
                "required": [],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "email": {
                        "type": "string"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "User"
                }
            },
            "Order": {
                "description": "EscolaLms\\Cart\\Models\\Order",
                "properties": {
                    "id": {
                        "description": "id",
                        "type": "integer"
                    },
                    "user_id": {
                        "description": "user_id",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "Product": {
                "description": "EscolaLms\\Cart\\Models\\Product",
                "properties": {
                    "id": {
                        "description": "id",
                        "type": "integer"
                    },
                    "name": {
                        "description": "name",
                        "type": "string"
                    },
                    "price": {
                        "description": "price",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "ConsultationTerm": {
                "properties": {
                    "status": {
                        "description": "status",
                        "type": "string"
                    },
                    "date": {
                        "description": "date",
                        "type": "datetime"
                    },
                    "is_ended": {
                        "description": "is_ended",
                        "type": "boolean"
                    },
                    "consultation_term_id": {
                        "description": "consultation_term_id",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "Consultation": {
                "required": [
                    "name",
                    "status",
                    "description",
                    "author_id"
                ],
                "properties": {
                    "id": {
                        "description": "id",
                        "type": "integer"
                    },
                    "name": {
                        "description": "name",
                        "type": "string"
                    },
                    "status": {
                        "description": "status",
                        "type": "string"
                    },
                    "description": {
                        "description": "description",
                        "type": "string"
                    },
                    "duration": {
                        "description": "duration",
                        "type": "string"
                    },
                    "author_id": {
                        "description": "author_id",
                        "type": "integer"
                    },
                    "base_price": {
                        "description": "base_price",
                        "type": "integer"
                    },
                    "active_to": {
                        "description": "active_to",
                        "type": "datetime"
                    },
                    "active_from": {
                        "description": "active_from",
                        "type": "datetime"
                    },
                    "created_at": {
                        "description": "created_at",
                        "type": "datetime"
                    },
                    "updated_at": {
                        "description": "updated_at",
                        "type": "datetime"
                    },
                    "consultation_user_id": {
                        "description": "consultation_user_id",
                        "type": "integer"
                    },
                    "executed_status": {
                        "description": "executed_status",
                        "type": "string"
                    },
                    "executed_at": {
                        "description": "executed_at",
                        "type": "datetime"
                    },
                    "categories": {
                        "description": "categories",
                        "type": "array",
                        "items": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "example": "Dokumentacja"
                                },
                                "icon_class": {
                                    "type": "string",
                                    "example": "fa-business-time"
                                },
                                "is_active": {
                                    "type": "bool",
                                    "example": "true"
                                },
                                "parent_id": {
                                    "type": "?integer",
                                    "example": "null"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "proposed_terms": {
                        "description": "proposed_terms",
                        "type": "array",
                        "items": {
                            "properties": {
                                "": {
                                    "type": "string",
                                    "example": "12-12-2022 11:30"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "Course": {
                "required": [
                    "title"
                ],
                "properties": {
                    "id": {
                        "description": "id",
                        "type": "integer"
                    },
                    "title": {
                        "description": "title",
                        "type": "string"
                    },
                    "summary": {
                        "description": "summary",
                        "type": "string"
                    },
                    "image_path": {
                        "description": "image_path",
                        "type": "string"
                    },
                    "video_path": {
                        "description": "video_path",
                        "type": "string"
                    },
                    "image_url": {
                        "description": "image_url",
                        "type": "string"
                    },
                    "video_url": {
                        "description": "video_url",
                        "type": "string"
                    },
                    "duration": {
                        "description": "duration",
                        "type": "string"
                    },
                    "scorm_sco_id": {
                        "description": "scorm_sco_id",
                        "type": "integer"
                    },
                    "image": {
                        "description": "image",
                        "type": "file"
                    },
                    "video": {
                        "description": "video",
                        "type": "file"
                    },
                    "status": {
                        "description": "status",
                        "type": "string"
                    },
                    "subtitle": {
                        "description": "subtitle",
                        "type": "string"
                    },
                    "language": {
                        "description": "language",
                        "type": "string"
                    },
                    "description": {
                        "description": "description",
                        "type": "string"
                    },
                    "level": {
                        "description": "level",
                        "type": "string"
                    },
                    "poster": {
                        "description": "poster",
                        "type": "file"
                    },
                    "poster_path": {
                        "description": "poster_path",
                        "type": "string"
                    },
                    "poster_url": {
                        "description": "poster_url",
                        "type": "string"
                    },
                    "active_from": {
                        "description": "active_from",
                        "type": "datetime"
                    },
                    "active_to": {
                        "description": "active_to",
                        "type": "datetime"
                    },
                    "hours_to_complete": {
                        "description": "hours_to_complete",
                        "type": "integer"
                    },
                    "findable": {
                        "description": "findable",
                        "type": "boolean"
                    },
                    "target_group": {
                        "description": "target group",
                        "type": "string"
                    },
                    "teaser_url": {
                        "description": "teaser url",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Lesson": {
                "required": [
                    "title",
                    "order",
                    "course_id"
                ],
                "properties": {
                    "id": {
                        "description": "id",
                        "type": "integer"
                    },
                    "title": {
                        "description": "title",
                        "type": "string"
                    },
                    "duration": {
                        "description": "duration",
                        "type": "string"
                    },
                    "summary": {
                        "description": "summary",
                        "type": "string"
                    },
                    "order": {
                        "description": "order",
                        "type": "integer"
                    },
                    "course_id": {
                        "description": "course_id",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "Topic": {
                "required": [
                    "lesson_id",
                    "order"
                ],
                "properties": {
                    "id": {
                        "description": "id",
                        "type": "integer"
                    },
                    "title": {
                        "description": "title",
                        "type": "string"
                    },
                    "active": {
                        "description": "active",
                        "type": "boolean"
                    },
                    "can_skip": {
                        "description": "can skip",
                        "type": "boolean"
                    },
                    "preview": {
                        "description": "preview",
                        "type": "boolean"
                    },
                    "lesson_id": {
                        "description": "lesson_id",
                        "type": "integer"
                    },
                    "topicable_id": {
                        "description": "topicable_id",
                        "type": "integer"
                    },
                    "topicable_type": {
                        "description": "topicable_type",
                        "type": "string"
                    },
                    "value": {
                        "description": "value",
                        "type": "string"
                    },
                    "summary": {
                        "description": "summary",
                        "type": "string"
                    },
                    "introduction": {
                        "description": "introduction",
                        "type": "string"
                    },
                    "description": {
                        "description": "description",
                        "type": "string"
                    },
                    "order": {
                        "description": "order",
                        "type": "integer"
                    },
                    "json": {
                        "description": "json",
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "TopicResource": {
                "required": [
                    "topic_id",
                    "path",
                    "name"
                ],
                "properties": {
                    "id": {
                        "description": "id",
                        "type": "integer"
                    },
                    "topic_id": {
                        "description": "topic_id",
                        "type": "integer"
                    },
                    "path": {
                        "description": "path",
                        "type": "string"
                    },
                    "name": {
                        "description": "name",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "H5PContentStore": {
                "properties": {
                    "title": {
                        "description": "Title of new content",
                        "type": "string"
                    },
                    "library": {
                        "description": "ubername of library",
                        "type": "string"
                    },
                    "params": {
                        "description": "params taken from editor",
                        "type": "string"
                    },
                    "nonce": {
                        "description": "nonce taken from editor settings (random for new, hash for exisiting)",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "H5PContentList": {
                "properties": {
                    "current_page": {
                        "type": "integer"
                    },
                    "first_page_url": {
                        "type": "string"
                    },
                    "last_page": {
                        "type": "integer"
                    },
                    "last_page_url": {
                        "type": "string"
                    },
                    "next_page_url": {
                        "type": "string"
                    },
                    "path": {
                        "type": "string"
                    },
                    "per_page": {
                        "type": "integer"
                    },
                    "prev_page_url": {
                        "type": "string"
                    },
                    "to": {
                        "type": "integer"
                    },
                    "total": {
                        "type": "integer"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/H5PContent"
                        }
                    }
                },
                "type": "object"
            },
            "H5PLibraryForEditor": {
                "properties": {
                    "css": {
                        "description": "array of css dependencies",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "defaultLanguage": {
                        "description": "",
                        "type": "string"
                    },
                    "javascript": {
                        "description": "array of js dependencies",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "language": {
                        "description": "",
                        "type": "string"
                    },
                    "languages": {
                        "description": "array of possible languages",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "name": {
                        "description": "machine name of the library",
                        "type": "string",
                        "example": "H5P.ArithmeticQuiz"
                    },
                    "semantics": {
                        "description": "array of objects with keys: name, type, label, importance, widget, etc",
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    },
                    "title": {
                        "description": "Title",
                        "type": "string",
                        "example": "Arithmetic Quiz"
                    },
                    "translations": {
                        "description": "array of possible languages",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "upgradesScript": {
                        "description": "",
                        "type": "boolean"
                    },
                    "version": {
                        "description": "has `major` and `minor` keys",
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "H5PEditorSettings": {
                "properties": {
                    "ajax": {
                        "description": "array of css dependencies",
                        "type": "object",
                        "allOf": [
                            {
                                "properties": {
                                    "setFinished": {},
                                    "ajaxSetFinished": {}
                                },
                                "type": "object"
                            }
                        ]
                    },
                    "baseUrl": {
                        "description": "",
                        "type": "string"
                    },
                    "l10n": {
                        "description": "transaltions",
                        "type": "object"
                    },
                    "contents": {
                        "description": "contents if editing extisting content. key is in form of `cid-{id}`",
                        "type": "object"
                    },
                    "editor": {
                        "description": "",
                        "type": "object",
                        "allOf": [
                            {
                                "properties": {
                                    "ajaxPath": {
                                        "description": "",
                                        "type": "string"
                                    },
                                    "assets": {
                                        "description": "array of dependencies",
                                        "type": "object",
                                        "allOf": [
                                            {
                                                "properties": {
                                                    "css": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "js": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        }
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        ]
                                    },
                                    "apiVersion": {
                                        "description": "versio of h5p API",
                                        "type": "object",
                                        "allOf": [
                                            {
                                                "properties": {
                                                    "majorVersion": {
                                                        "type": "integer"
                                                    },
                                                    "minorVersion": {
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        ]
                                    },
                                    "copyrightSemantics": {
                                        "description": "copyright Semantics",
                                        "type": "object"
                                    },
                                    "deleteMessage": {
                                        "description": "delete Message",
                                        "type": "string"
                                    },
                                    "fileIcon": {
                                        "description": "",
                                        "type": "object"
                                    },
                                    "filesPath": {
                                        "description": "array of css dependencies",
                                        "type": "string"
                                    },
                                    "libraryUrl": {
                                        "description": "array of css dependencies",
                                        "type": "string"
                                    },
                                    "metadataSemantics": {
                                        "description": "",
                                        "type": "array",
                                        "items": {
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        ]
                    },
                    "core": {
                        "description": "",
                        "type": "object",
                        "allOf": [
                            {
                                "properties": {
                                    "scripts": {
                                        "description": "array of css dependencies",
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "styles": {
                                        "description": "array of css dependencies",
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        ]
                    },
                    "languages": {
                        "description": "array of possible languages",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "name": {
                        "description": "machine name of the library",
                        "type": "string",
                        "example": "H5P.ArithmeticQuiz"
                    },
                    "semantics": {
                        "description": "array of objects with keys: name, type, label, importance, widget, etc",
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    },
                    "title": {
                        "description": "Title",
                        "type": "string",
                        "example": "Arithmetic Quiz"
                    },
                    "translations": {
                        "description": "array of possible languages",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "upgradesScript": {
                        "description": "",
                        "type": "boolean"
                    },
                    "version": {
                        "description": "has `major` and `minor` keys",
                        "type": "object"
                    },
                    "nodeVersionId": {
                        "description": "ID of content if editing existsing content",
                        "type": "integer"
                    },
                    "nonce": {
                        "description": "ID Hash to move and clearup files uploaded by editor",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "H5PContentFile": {
                "properties": {
                    "file": {
                        "description": "file uploaded by h5peditor",
                        "type": "file",
                        "format": "binary"
                    },
                    "field": {
                        "description": "json description of file",
                        "type": "string",
                        "format": "string"
                    },
                    "contentId": {
                        "description": "id of content",
                        "type": "string",
                        "format": "string"
                    }
                },
                "type": "object"
            },
            "H5PContent": {
                "properties": {
                    "id": {
                        "description": "Id",
                        "type": "integer"
                    },
                    "created_at": {
                        "description": "Date created at",
                        "type": "string"
                    },
                    "updated_at": {
                        "description": "Date updated at",
                        "type": "string"
                    },
                    "user_id": {
                        "description": "id of user that created/updated ",
                        "type": "string"
                    },
                    "title": {
                        "description": "Title of new content",
                        "type": "string"
                    },
                    "library_id": {
                        "description": "library_id",
                        "type": "string"
                    },
                    "parameters": {
                        "description": "JSON parameters",
                        "type": "string"
                    },
                    "filtered": {
                        "description": "filtered",
                        "type": "string"
                    },
                    "slug": {
                        "description": "slug",
                        "type": "string"
                    },
                    "embed_type": {
                        "description": "embed type",
                        "type": "string"
                    },
                    "params": {
                        "description": "parsed parameters",
                        "type": "object"
                    },
                    "metadata": {
                        "description": "parsed metadata",
                        "type": "object"
                    },
                    "library": {
                        "$ref": "#/components/schemas/H5PLibrary"
                    },
                    "nonce": {
                        "description": "nonce taken from editor settings (random for new, hash for exisiting)",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "H5PLibrary": {
                "properties": {
                    "id": {
                        "description": "ID of Content in DB",
                        "type": "integer"
                    },
                    "created_at": {
                        "description": "",
                        "type": "string"
                    },
                    "updated_at": {
                        "description": "",
                        "type": "string"
                    },
                    "name": {
                        "description": "Machine name. Alias",
                        "type": "string"
                    },
                    "runnable": {
                        "description": "Can be selected from editor dropdown list",
                        "type": "integer"
                    },
                    "restricted": {
                        "description": "",
                        "type": "integer"
                    },
                    "fullscreen": {
                        "description": "",
                        "type": "integer"
                    },
                    "embed_types": {
                        "description": "Either div or iframe",
                        "type": "string"
                    },
                    "semantics": {
                        "description": "",
                        "type": "object"
                    },
                    "machineName": {
                        "description": "Machine Name",
                        "type": "string"
                    },
                    "uberName": {
                        "description": "params taken from editor",
                        "type": "string"
                    },
                    "majorVersion": {
                        "description": "major version",
                        "type": "string"
                    },
                    "minorVersion": {
                        "description": "minor version",
                        "type": "string"
                    },
                    "patchVersion": {
                        "description": "Patch Version",
                        "type": "string"
                    },
                    "preloadedJs": {
                        "description": "Comma separated list of JavaScript dependencies",
                        "type": "string"
                    },
                    "preloadedCss": {
                        "description": "Comma separated list of CSS dependencies",
                        "type": "string"
                    },
                    "dropLibraryCss": {
                        "description": "",
                        "type": "string"
                    },
                    "tutorialUrl": {
                        "description": "",
                        "type": "string"
                    },
                    "hasIcon": {
                        "description": "",
                        "type": "string"
                    },
                    "libraryId": {
                        "description": "ID of library. Alias",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "ModelField": {
                "properties": {
                    "id": {
                        "description": "template id",
                        "type": "integer"
                    },
                    "name": {
                        "description": "template name",
                        "type": "string"
                    },
                    "value": {
                        "description": "",
                        "type": "string"
                    },
                    "class_type": {
                        "description": "",
                        "type": "string"
                    },
                    "class_id": {
                        "description": "",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Metadata": {
                "properties": {
                    "id": {
                        "description": "id",
                        "type": "integer"
                    },
                    "name": {
                        "description": "name",
                        "type": "string"
                    },
                    "value": {
                        "description": "value",
                        "type": "string"
                    },
                    "default": {
                        "description": "default",
                        "type": "string"
                    },
                    "rules": {
                        "description": "rules",
                        "type": "object"
                    },
                    "extra": {
                        "description": "extra",
                        "type": "object"
                    },
                    "visibility": {
                        "description": "visibility",
                        "type": "object"
                    },
                    "class_type": {
                        "description": "class_type",
                        "type": "string"
                    },
                    "class_id": {
                        "description": "class_id",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Notification": {
                "properties": {
                    "id": {
                        "description": "notification uuid",
                        "type": "integer"
                    },
                    "type": {
                        "description": "notification full classname",
                        "type": "string"
                    },
                    "event": {
                        "description": "event full classname",
                        "type": "string"
                    },
                    "notifiable_type": {
                        "description": "class representing User that got the notification",
                        "type": "string"
                    },
                    "notifiable_id": {
                        "description": "id of User that got the notification",
                        "type": "string"
                    },
                    "data": {
                        "description": "all notification data",
                        "type": "object"
                    },
                    "read_at": {
                        "description": "timestamp when notification was marked as read",
                        "type": "datetime"
                    }
                },
                "type": "object"
            },
            "Page": {
                "required": [
                    "title",
                    "author_id",
                    "content"
                ],
                "properties": {
                    "title": {
                        "description": "page title",
                        "type": "string"
                    },
                    "author_id": {
                        "description": "identifier of the user object who owns a page",
                        "type": "integer"
                    },
                    "content": {
                        "description": "page content",
                        "type": "string"
                    },
                    "active": {
                        "description": "page is active",
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "Payment": {
                "required": [
                    "amount",
                    "currency",
                    "description"
                ],
                "properties": {
                    "id": {
                        "description": "id",
                        "type": "integer"
                    },
                    "amount": {
                        "description": "amount",
                        "type": "integer"
                    },
                    "currency": {
                        "description": "currency",
                        "type": "string"
                    },
                    "description": {
                        "description": "description",
                        "type": "string"
                    },
                    "order_id": {
                        "description": "order_id",
                        "type": "string"
                    },
                    "payable_id": {
                        "description": "payable_id",
                        "type": "integer"
                    },
                    "payable_type": {
                        "description": "payable_type",
                        "type": "string"
                    },
                    "user_id": {
                        "description": "user_id",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "Role": {
                "required": [
                    "name"
                ],
                "properties": {
                    "id": {
                        "description": "id ",
                        "type": "integer"
                    },
                    "name": {
                        "description": "name ",
                        "type": "string"
                    },
                    "guard_name": {
                        "description": "Guard Name",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Permission": {
                "required": [
                    "id",
                    "name",
                    "guard_name",
                    "assigned"
                ],
                "properties": {
                    "id": {
                        "description": "id ",
                        "type": "integer"
                    },
                    "name": {
                        "description": "name ",
                        "type": "string"
                    },
                    "guard_name": {
                        "description": "Guard Name",
                        "type": "string"
                    },
                    "assigned": {
                        "description": "Is permission assigned to current role",
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "QuestionnaireAnswerRequest": {
                "properties": {
                    "answers": {
                        "description": "answers for questionnaire",
                        "type": "array",
                        "items": {
                            "properties": {
                                "question_id": {
                                    "description": "question identified by id",
                                    "type": "integer"
                                },
                                "rate": {
                                    "description": "rate from 1 to 5",
                                    "type": "integer"
                                },
                                "note": {
                                    "description": "anser of text type",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "QuestionnaireReportResource": {
                "properties": {
                    "sum_rate": {
                        "description": "sum of rates for this question",
                        "type": "string"
                    },
                    "count_answers": {
                        "description": "count all answers for this question",
                        "type": "integer"
                    },
                    "avg_rate": {
                        "description": "average rate",
                        "type": "string"
                    },
                    "question_id": {
                        "description": "question identifier",
                        "type": "integer"
                    },
                    "title": {
                        "description": "question title",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "QuestionnaireStarsResource": {
                "properties": {
                    "sum_rate": {
                        "description": "sum of rates for this question",
                        "type": "string"
                    },
                    "count_answers": {
                        "description": "count all answers for this question",
                        "type": "integer"
                    },
                    "avg_rate": {
                        "description": "average rate",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Question": {
                "required": [
                    "title",
                    "questionnaire_id"
                ],
                "properties": {
                    "title": {
                        "description": "question title",
                        "type": "string"
                    },
                    "questionnaire_id": {
                        "description": "identifier of the questionnaire object",
                        "type": "integer"
                    },
                    "description": {
                        "description": "question description",
                        "type": "string"
                    },
                    "position": {
                        "description": "question position",
                        "type": "integer"
                    },
                    "active": {
                        "description": "question is active",
                        "type": "boolean"
                    },
                    "type": {
                        "description": "type: rate, text",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "QuestionAnswer": {
                "required": [
                    "rate",
                    "question_id",
                    "user_id",
                    "questionnaire_model_id"
                ],
                "properties": {
                    "rate": {
                        "description": "question rate",
                        "type": "integer"
                    },
                    "question_id": {
                        "description": "identifier of the question object",
                        "type": "integer"
                    },
                    "user_id": {
                        "description": "identifier of the user object",
                        "type": "integer"
                    },
                    "questionnaire_model_id": {
                        "description": "identifier of the questionnaire model object",
                        "type": "integer"
                    },
                    "note": {
                        "description": "text answer",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Questionnaire": {
                "required": [
                    "title"
                ],
                "properties": {
                    "title": {
                        "description": "questionnaire title",
                        "type": "string"
                    },
                    "active": {
                        "description": "Questionnaire is active",
                        "type": "boolean"
                    },
                    "questions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Question"
                        }
                    },
                    "models": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/QuestionnaireModel"
                        }
                    }
                },
                "type": "object"
            },
            "QuestionnaireModel": {
                "required": [
                    "questionnaire_id",
                    "model_type_id",
                    "model_id"
                ],
                "properties": {
                    "questionnaire_id": {
                        "description": "identifier of the questionnaire object",
                        "type": "integer"
                    },
                    "model_id": {
                        "description": "identifier of the model object who is asigne to questionnaire",
                        "type": "integer"
                    },
                    "model_type_id": {
                        "description": "model_type_id",
                        "type": "integer"
                    },
                    "model_title": {
                        "description": "model_title",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "QuestionnaireModelType": {
                "required": [
                    "title",
                    "model_class"
                ],
                "properties": {
                    "title": {
                        "description": "title",
                        "type": "string"
                    },
                    "model_class": {
                        "description": "model_class",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Setting": {
                "required": [
                    "title"
                ],
                "properties": {
                    "id": {
                        "description": "id",
                        "type": "integer"
                    },
                    "key": {
                        "description": "key",
                        "type": "string"
                    },
                    "group": {
                        "description": "group",
                        "type": "string"
                    },
                    "value": {
                        "description": "value",
                        "type": "string"
                    },
                    "type": {
                        "description": "type",
                        "type": "string"
                    },
                    "public": {
                        "description": "public",
                        "type": "boolean"
                    },
                    "enumerable": {
                        "description": "enumerable",
                        "type": "boolean"
                    },
                    "sort": {
                        "description": "sort",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "stationary-event-create-request": {
                "required": [
                    "name",
                    "description",
                    "started_at",
                    "finished_at"
                ],
                "properties": {
                    "name": {
                        "description": "name",
                        "type": "string"
                    },
                    "description": {
                        "description": "description",
                        "type": "string"
                    },
                    "short_desc": {
                        "description": "short description",
                        "type": "string"
                    },
                    "started_at": {
                        "description": "started_at",
                        "type": "datetime"
                    },
                    "finished_at": {
                        "description": "finished_at",
                        "type": "datetime"
                    },
                    "max_participants": {
                        "description": "max_participants",
                        "type": "integer"
                    },
                    "place": {
                        "description": "place",
                        "type": "string"
                    },
                    "program": {
                        "description": "program",
                        "type": "string"
                    },
                    "authors": {
                        "description": "authors",
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "categories": {
                        "description": "categories",
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "image": {
                        "description": "image",
                        "type": "file"
                    }
                },
                "type": "object"
            },
            "stationary-event-update-request": {
                "properties": {
                    "name": {
                        "description": "name",
                        "type": "string"
                    },
                    "description": {
                        "description": "description",
                        "type": "string"
                    },
                    "short_desc": {
                        "description": "short description",
                        "type": "string"
                    },
                    "started_at": {
                        "description": "started_at",
                        "type": "datetime"
                    },
                    "finished_at": {
                        "description": "finished_at",
                        "type": "datetime"
                    },
                    "max_participants": {
                        "description": "max_participants",
                        "type": "integer"
                    },
                    "place": {
                        "description": "place",
                        "type": "string"
                    },
                    "program": {
                        "description": "program",
                        "type": "string"
                    },
                    "authors": {
                        "description": "authors",
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "categories": {
                        "description": "categories",
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "image": {
                        "description": "image",
                        "type": "file"
                    },
                    "image_path": {
                        "description": "image_path",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "stationary-event": {
                "required": [
                    "name",
                    "description",
                    "started_at",
                    "finished_at"
                ],
                "properties": {
                    "id": {
                        "description": "id",
                        "type": "integer"
                    },
                    "name": {
                        "description": "name",
                        "type": "string"
                    },
                    "description": {
                        "description": "description",
                        "type": "string"
                    },
                    "short_desc": {
                        "description": "short description",
                        "type": "string"
                    },
                    "started_at": {
                        "description": "started_at",
                        "type": "datetime"
                    },
                    "finished_at": {
                        "description": "finished_at",
                        "type": "datetime"
                    },
                    "max_participants": {
                        "description": "max_participants",
                        "type": "integer"
                    },
                    "place": {
                        "description": "place",
                        "type": "string"
                    },
                    "program": {
                        "description": "program",
                        "type": "string"
                    },
                    "image_path": {
                        "description": "image_path",
                        "type": "string"
                    },
                    "created_at": {
                        "description": "created_at",
                        "type": "datetime"
                    },
                    "updated_at": {
                        "description": "updated_at",
                        "type": "datetime"
                    }
                },
                "type": "object"
            },
            "FabricPDF": {
                "properties": {
                    "id": {
                        "description": "template id",
                        "type": "integer"
                    },
                    "title": {
                        "description": "title",
                        "type": "string"
                    },
                    "content": {
                        "description": "fabric.js serialized content",
                        "type": "object"
                    },
                    "path": {
                        "description": "path to rendered PDF binary file",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Template": {
                "properties": {
                    "id": {
                        "description": "template id",
                        "type": "integer"
                    },
                    "name": {
                        "description": "template name",
                        "type": "string"
                    },
                    "event": {
                        "description": "event full classname",
                        "type": "string"
                    },
                    "channel": {
                        "description": "channel full classname",
                        "type": "string"
                    },
                    "default": {
                        "description": "this template is default template for given channel and event pair",
                        "type": "bool"
                    }
                },
                "type": "object"
            },
            "Coupon": {
                "description": "EscolaLms\\Vouchers\\Models\\Coupon",
                "required": [
                    "code",
                    "type",
                    "amount"
                ],
                "properties": {
                    "id": {
                        "description": "id",
                        "type": "integer"
                    },
                    "name": {
                        "description": "name",
                        "type": "string"
                    },
                    "code": {
                        "description": "code",
                        "type": "string"
                    },
                    "type": {
                        "description": "type",
                        "type": "string"
                    },
                    "active_from": {
                        "description": "active_from",
                        "type": "data"
                    },
                    "active_to": {
                        "description": "active_to",
                        "type": "data"
                    },
                    "limit_usage": {
                        "description": "limit_usage",
                        "type": "integer"
                    },
                    "limit_per_user": {
                        "description": "limit_per_user",
                        "type": "integer"
                    },
                    "min_cart_price": {
                        "description": "min_cart_price",
                        "type": "integer"
                    },
                    "max_cart_price": {
                        "description": "max_cart_price",
                        "type": "integer"
                    },
                    "amount": {
                        "description": "amount",
                        "type": "integer"
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "included_products": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "excluded_products": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "included_categories": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "excluded_categories": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "active": {
                        "type": "array",
                        "items": {
                            "type": "boolean"
                        }
                    },
                    "exclude_promotions": {
                        "type": "array",
                        "items": {
                            "type": "boolean"
                        }
                    }
                },
                "type": "object"
            },
            "Webinar": {
                "required": [
                    "name",
                    "status",
                    "description"
                ],
                "properties": {
                    "id": {
                        "description": "id",
                        "type": "integer"
                    },
                    "name": {
                        "description": "name",
                        "type": "string"
                    },
                    "status": {
                        "description": "status",
                        "type": "string"
                    },
                    "description": {
                        "description": "description",
                        "type": "string"
                    },
                    "short_desc": {
                        "description": "short_desc",
                        "type": "string"
                    },
                    "agenda": {
                        "description": "agenda",
                        "type": "string"
                    },
                    "duration": {
                        "description": "duration",
                        "type": "string"
                    },
                    "base_price": {
                        "description": "base_price",
                        "type": "integer"
                    },
                    "active_to": {
                        "description": "active_to",
                        "type": "datetime"
                    },
                    "active_from": {
                        "description": "active_from",
                        "type": "datetime"
                    },
                    "created_at": {
                        "description": "created_at",
                        "type": "datetime"
                    },
                    "updated_at": {
                        "description": "updated_at",
                        "type": "datetime"
                    },
                    "yt_url": {
                        "description": "yt_url",
                        "type": "string"
                    },
                    "yt_stream_url": {
                        "description": "yt_stream_url",
                        "type": "string"
                    },
                    "yt_stream_key": {
                        "description": "yt_stream_key",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Jitsi": {
                "properties": {
                    "data": {
                        "type": "object"
                    },
                    "domain": {
                        "type": "string",
                        "example": "meet-stage.escolalms.com"
                    },
                    "url": {
                        "type": "string",
                        "example": "https://meet-stage.escolalms.com/asdhuasd.?jwt=token"
                    },
                    "yt_url": {
                        "type": "string",
                        "example": "https://youtube.pl/"
                    },
                    "yt_stream_url": {
                        "type": "string",
                        "example": "rtmp://a.rtmp.youtube.com/xyz"
                    },
                    "yt_stream_key": {
                        "type": "string",
                        "example": "asdqdfas123asdqwe"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "passport": {
                "type": "http",
                "name": "bearerAuth",
                "in": "header",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "security": [
        []
    ]
}